{"ast":null,"code":"import _objectSpread from \"/Users/oisinlyons/Downloads/IDENTI3 PRO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/oisinlyons/Downloads/IDENTI3 PRO/src/pages/components/Forms.js\";\n\nimport React from 'react';\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport Nouislider from \"nouislider-react\";\nimport { CalendarIcon, SearchIcon } from \"@heroicons/react/solid\";\nimport { Col, Row, Card, Form, Container, InputGroup } from 'react-bootstrap';\nimport Select from 'react-select';\nimport Documentation from \"components/Documentation\";\nexport default (function () {\n  var selectOptions = [{\n    value: 'bootstrap',\n    label: 'Bootstrap'\n  }, {\n    value: 'react',\n    label: 'React'\n  }, {\n    value: 'vue',\n    label: 'Vue'\n  }, {\n    value: 'angular',\n    label: 'Angular'\n  }, {\n    value: 'svelte',\n    label: 'Svelte'\n  }, {\n    value: 'laravel',\n    label: 'Laravel'\n  }, {\n    value: 'node',\n    label: 'Node'\n  }, {\n    value: 'dotnet',\n    label: '.NET'\n  }];\n  var customStyles = {\n    control: function control(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        borderRadius: '.5rem'\n      });\n    },\n    multiValue: function multiValue(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        borderRadius: '.5rem'\n      });\n    },\n    multiValueRemove: function multiValueRemove(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        borderRadius: '.5rem'\n      });\n    },\n    placeholder: function placeholder(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        borderRadius: '.5rem'\n      });\n    },\n    singleValue: function singleValue(provided, state) {\n      var opacity = state.isDisabled ? 0.5 : 1;\n      var transition = 'opacity 300ms';\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        opacity: opacity,\n        transition: transition\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-block mb-4 mb-md-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Forms\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Use form elements such as text inputs, textareas, file uploads and many more to get input from you users.\"))), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Example\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Form elements are an important part of the UI to receive text input from the users. The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 104\n      }\n    }, \"<Form>\"), \" component can be used to create forms, form groups, labels, and input elements inside the UI. Check out the following example for a simple email input field and a textarea field:\"),\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Email address</Form.Label>\\n    <Form.Control type=\\\"email\\\" placeholder=\\\"name@example.com\\\" />\\n  </Form.Group>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Example textarea</Form.Label>\\n    <Form.Control as=\\\"textarea\\\" rows=\\\"3\\\" />\\n  </Form.Group>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Input fields with icon\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"You can also add icons to the left or right side of the input field by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 97\n      }\n    }, \"<InputGroup>\"), \" component and using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 157\n      }\n    }, \"<InputGroup.Text>\"), \" element with an icon element inside it, either after or before the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 265\n      }\n    }, \"<Form.Control>\"), \" element.\"),\n    scope: {\n      Form: Form,\n      InputGroup: InputGroup,\n      SearchIcon: SearchIcon\n    },\n    imports: \"import { Form, InputGroup } from 'react-bootstrap';\\nimport { SearchIcon } from \\\"@heroicons/react/solid\\\";\",\n    example: \"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Icon Left</Form.Label>\\n    <InputGroup>\\n      <InputGroup.Text><SearchIcon className=\\\"icon icon-xs\\\" /></InputGroup.Text>\\n      <Form.Control type=\\\"text\\\" placeholder=\\\"Search\\\" />\\n    </InputGroup>\\n  </Form.Group>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Icon Right</Form.Label>\\n    <InputGroup>\\n      <Form.Control type=\\\"text\\\" placeholder=\\\"Search\\\" />\\n      <InputGroup.Text><SearchIcon className=\\\"icon icon-xs\\\" /></InputGroup.Text>\\n    </InputGroup>\\n  </Form.Group>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Validation\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"You can easily update the styles of a valid or invalid styles input field by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 103\n      }\n    }, \"isValid\"), \" or \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 127\n      }\n    }, \"isInvalid\"), \" attributes. Additionally, you can use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 192\n      }\n    }, \"<Form.Control.Feedback>\"), \" component to write the message regarding the success or error message.\"),\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Username</Form.Label>\\n    <Form.Control required isInvalid type=\\\"text\\\" />\\n    <Form.Control.Feedback type=\\\"invalid\\\">Please choose a username.</Form.Control.Feedback>\\n  </Form.Group>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>First name</Form.Label>\\n    <Form.Control required isValid type=\\\"text\\\" defaultValue=\\\"Mark\\\" />\\n    <Form.Control.Feedback type=\\\"valid\\\">Looks good!</Form.Control.Feedback>\\n  </Form.Group>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Select input\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 20\n      }\n    }, \"<Form.Select>\"), \" component can be used for option selection from the user. You can use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 131\n      }\n    }, \"<option>\"), \" elements to add multiple options and use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 208\n      }\n    }, \"defaultValue\"), \" attribute to set the default value of the select field.\"),\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Example select</Form.Label>\\n    <Form.Select>\\n      <option defaultValue>Open this select menu</option>\\n      <option>One</option>\\n      <option>Two</option>\\n      <option>Three</option>\\n    </Form.Select>\\n  </Form.Group>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Multiple select\",\n    description: \"\",\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Example multiple select</Form.Label>\\n    <Form.Select multiple>\\n      <option defaultValue>Open this select menu</option>\\n      <option>One</option>\\n      <option>Two</option>\\n      <option>Three</option>\\n    </Form.Select>\\n  </Form.Group>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Textarea\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, \"You can create a textarea input field by adding the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 68\n      }\n    }, \"as=\\\"textarea\\\"\"), \" modifier attribute to the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 121\n      }\n    }, \"<Form.Control>\"), \" component.\"),\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <Form.Group>\\n    <Form.Label>Example textarea</Form.Label>\\n    <Form.Control as=\\\"textarea\\\" rows=\\\"4\\\" placeholder=\\\"Enter your message...\\\" />\\n  </Form.Group>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"File upload\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, \"If you want to use an input field to upload files, you need to add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 87\n      }\n    }, \"type=\\\"file\\\"\"), \" attribute to the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 129\n      }\n    }, \"<Form.Control>\"), \" component.\"),\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <Form.Control type=\\\"file\\\" />\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Checkboxes\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 26\n      }\n    }, \"<Form.Check>\"), \" component to create checkbox items. If you want to disable on them, you need to add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 150\n      }\n    }, \"disabled\"), \" attribute.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, \"Make sure the is a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, 'id=\"*\"'), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 65\n      }\n    }, 'htmlFor=\"*\"'), \" attribute for each element so that clicking on the text will also toggle the element.\")),\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <Form.Check label=\\\"Default checkbox\\\" id=\\\"checkbox1\\\" htmlFor=\\\"checkbox1\\\" />\\n  <Form.Check disabled label=\\\"Disabled checkbox\\\" id=\\\"checkbox2\\\" htmlFor=\\\"checkbox2\\\" />\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Radio buttons\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, \"If you want to use radio buttons, you need to use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 72\n      }\n    }, \"<Form.Check>\"), \" component with the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 127\n      }\n    }, \"type=\\\"radio\\\"\"), \" modifier. You can disable the element by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 204\n      }\n    }, \"disabled\"), \" attribute.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, \"Make sure the is a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }, 'id=\"*\"'), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 65\n      }\n    }, 'htmlFor=\"*\"'), \" attribute for each element so that clicking on the text will also toggle the element.\")),\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <fieldset>\\n    <Form.Check\\n      defaultChecked\\n      type=\\\"radio\\\"\\n      defaultValue=\\\"option1\\\"\\n      label=\\\"Default radio\\\"\\n      name=\\\"exampleRadios\\\"\\n      id=\\\"radio1\\\"\\n      htmlFor=\\\"radio1\\\"\\n      />\\n\\n    <Form.Check\\n      type=\\\"radio\\\"\\n      defaultValue=\\\"option2\\\"\\n      label=\\\"Second default radio\\\"\\n      name=\\\"exampleRadios\\\"\\n      id=\\\"radio2\\\"\\n      htmlFor=\\\"radio2\\\"\\n      />\\n\\n    <Form.Check\\n      disabled\\n      type=\\\"radio\\\"\\n      defaultValue=\\\"option3\\\"\\n      label=\\\"Disabled radio\\\"\\n      name=\\\"exampleRadios\\\"\\n      id=\\\"radio3\\\"\\n      htmlFor=\\\"radio3\\\"\\n      />\\n  </fieldset>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Switches\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, \"If you want to use the switch component, you need to use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 79\n      }\n    }, \"<Form.Check>\"), \" component with the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 134\n      }\n    }, \"type=\\\"switch\\\"\"), \" modifier. If you want to have it checked by default, just add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 227\n      }\n    }, \"defaultChecked\"), \" attribute.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, \"Make sure the is a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 37\n      }\n    }, 'id=\"*\"'), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 65\n      }\n    }, 'htmlFor=\"*\"'), \" attribute for each element so that clicking on the text will also toggle the element.\")),\n    scope: {\n      Form: Form\n    },\n    imports: \"import { Form } from 'react-bootstrap';\",\n    example: \"<Form>\\n  <Form.Check\\n    type=\\\"switch\\\"\\n    label=\\\"Default switch\\\"\\n    id=\\\"switch1\\\"\\n    htmlFor=\\\"switch1\\\"\\n    />\\n\\n  <Form.Check defaultChecked\\n    type=\\\"switch\\\"\\n    label=\\\"Checked switch\\\"\\n    id=\\\"switch2\\\"\\n    htmlFor=\\\"switch2\\\"\\n    />\\n\\n  <Form.Check disabled\\n    type=\\\"switch\\\"\\n    label=\\\"Disabled switch\\\"\\n    id=\\\"switch3\\\"\\n    htmlFor=\\\"switch3\\\"\\n    />\\n\\n  <Form.Check disabled defaultChecked\\n    type=\\\"switch\\\"\\n    label=\\\"Disabled checked switch\\\"\\n    id=\\\"switch4\\\"\\n    htmlFor=\\\"switch4\\\"\\n    />\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Datepicker\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 24\n      }\n    }, \"<Datetime>\"), \" component to use a datepicker as an input field. You can read more about the options that you can use for this component by reading the \", /*#__PURE__*/React.createElement(Card.Link, {\n      href: \"https://www.npmjs.com/package/react-datetime\",\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 194\n      }\n    }, \"react-datetime\"), \" documentation.\"),\n    scope: {\n      Datetime: Datetime,\n      Form: Form,\n      InputGroup: InputGroup,\n      CalendarIcon: CalendarIcon,\n      moment: moment\n    },\n    imports: \"import React, { useState } from \\\"react\\\";\\nimport { Form, InputGroup } from 'react-bootstrap';\\nimport Datetime from \\\"react-datetime\\\";\\nimport moment from \\\"moment-timezone\\\";\\n\\nimport { faCalendarAlt } from \\\"@heroicons/react/solid\\\";\",\n    example: \"const Datepicker = () => {\\n  const [birthday, setBirthday] = React.useState(\\\"\\\");\\n\\n  return(\\n    <Form>\\n      <Form.Group className=\\\"mb-3\\\">\\n        <Datetime\\n          timeFormat={false}\\n          closeOnSelect={false}\\n          onChange={setBirthday}\\n          renderInput={(props, openCalendar) => (\\n            <InputGroup>\\n              <InputGroup.Text><CalendarIcon className=\\\"icon icon-xs\\\" /></InputGroup.Text>\\n              <Form.Control\\n                required\\n                type=\\\"text\\\"\\n                value={birthday ? moment(birthday).format(\\\"MM/DD/YYYY\\\") : \\\"\\\"}\\n                placeholder=\\\"mm/dd/yyyy\\\"\\n                onFocus={openCalendar}\\n                onChange={() => { }} />\\n            </InputGroup>\\n          )} />\\n      </Form.Group>\\n    </Form>\\n  );\\n}\\n\\nrender( <Datepicker /> )\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Searchable select\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }\n    }, \"Using the advanced \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 35\n      }\n    }, \"<Select>\"), \" component you can create an input field where you can select items, but also search for them. The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 165\n      }\n    }, \"selectOptions\"), \" constant should be an object of key and value pairs that will be added to the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 270\n      }\n    }, \"options\"), \" attribute of the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 308\n      }\n    }, \"<Select>\"), \" component.\"),\n    scope: {\n      Select: Select,\n      Form: Form,\n      selectOptions: selectOptions,\n      customStyles: customStyles\n    },\n    imports: \"import Select from \\\"react-select\\\";\\nimport { Form } from 'react-bootstrap';\\n\\nconst selectOptions = [\\n  { value: 'bootstrap', label: 'Bootstrap' },\\n  { value: 'react', label: 'React' },\\n  { value: 'vue', label: 'Vue' },\\n  { value: 'angular', label: 'Angular' },\\n  { value: 'svelte', label: 'Svelte' },\\n];\\n\\nconst customStyles = {\\n\\n  control: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem',\\n  }),\\n\\n  multiValue: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem'\\n  }),\\n\\n  multiValueRemove: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem'\\n  }),\\n\\n  placeholder: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem',\\n  }),\\n\\n  singleValue: (provided, state) => {\\n    const opacity = state.isDisabled ? 0.5 : 1;\\n    const transition = 'opacity 300ms';\\n\\n    return {\\n      ...provided,\\n      opacity,\\n      transition,\\n    };\\n  }\\n};\",\n    example: \"<Form>\\n  <Form.Group className=\\\"mb-2\\\">\\n    <Form.Label>Select state</Form.Label>\\n    <Select options={selectOptions} styles={customStyles} theme={theme => ({\\n      ...theme,\\n      borderRadius: 0,\\n      colors: {\\n        ...theme.colors,\\n        primary25: '#61DAFB',\\n        primary: '#61DAFB',\\n      }\\n    })} />\\n  </Form.Group>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Multiple searchable select\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }, \"Using tags and multiple options for the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 56\n      }\n    }, \"<Select>\"), \" component is as easy as adding a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 121\n      }\n    }, \"isMulti\"), \" attribute to the component.\"),\n    scope: {\n      Select: Select,\n      Form: Form,\n      selectOptions: selectOptions,\n      customStyles: customStyles\n    },\n    imports: \"import Select from \\\"react-select\\\";\\nimport { Form } from 'react-bootstrap';\\n\\nconst selectOptions = [\\n  { value: 'bootstrap', label: 'Bootstrap' },\\n  { value: 'react', label: 'React' },\\n  { value: 'vue', label: 'Vue' },\\n  { value: 'angular', label: 'Angular' },\\n  { value: 'svelte', label: 'Svelte' },\\n];\\n\\nconst customStyles = {\\n\\n  control: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem',\\n  }),\\n\\n  multiValue: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem'\\n  }),\\n\\n  multiValueRemove: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem'\\n  }),\\n\\n  placeholder: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem',\\n  }),\\n\\n  singleValue: (provided, state) => {\\n    const opacity = state.isDisabled ? 0.5 : 1;\\n    const transition = 'opacity 300ms';\\n\\n    return {\\n      ...provided,\\n      opacity,\\n      transition,\\n    };\\n  }\\n};\",\n    example: \"<Form>\\n  <Form.Group className=\\\"mb-2\\\">\\n    <Form.Label>Select state</Form.Label>\\n    <Select options={selectOptions} theme={theme => ({\\n      ...theme,\\n      borderRadius: 0,\\n      colors: {\\n        ...theme.colors,\\n        primary25: '#61DAFB',\\n        primary: '#61DAFB',\\n      }\\n    })} styles={customStyles} isMulti />\\n  </Form.Group>\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  }, \"There are many options that you can use with the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 61\n    }\n  }, \"react-select\"), \" library. Read more about the possibilities by browsing the \", /*#__PURE__*/React.createElement(Card.Link, {\n    href: \"https://react-select.com/home\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 146\n    }\n  }, \"official documentation.\")), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Range slider\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }\n    }, \"You can use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 32\n      }\n    }, \"<Nouislider>\"), \" component to create a range slider component and retreive count information from your users. You can set the start position of the slider position using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 225\n      }\n    }, \"start\"), \" attribute and set the minimum and maximum range using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 302\n      }\n    }, \"range\"), \" attribute.\"),\n    scope: {\n      Form: Form,\n      Nouislider: Nouislider\n    },\n    imports: \"import { Form } from 'react-bootstrap';\\nimport Nouislider from \\\"nouislider-react\\\";\",\n    example: \"<Form>\\n  <Nouislider\\n    connect=\\\"lower\\\"\\n    className=\\\"input-slider\\\"\\n    start={200}\\n    range={{ min: 100, max: 500 }}\\n  />\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Range slider count\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 13\n      }\n    }, \"In this example we show you how to use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 59\n      }\n    }, \"<Nouislider>\"), \" component to also show the value of the position of the slider using tooltips.\"),\n    scope: {\n      Form: Form,\n      Nouislider: Nouislider\n    },\n    imports: \"import { Form } from 'react-bootstrap';\\nimport Nouislider from \\\"nouislider-react\\\";\",\n    example: \"<Form>\\n  <Nouislider\\n    tooltips={true}\\n    connect={true}\\n    className=\\\"input-slider\\\"\\n    start={[200, 400]}\\n    range={{ min: 100, max: 500 }}\\n  />\\n</Form>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }\n  }, \"If you want read more about what options you can use with the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 74\n    }\n  }, \"<Nouislider>\"), \" component, you can check out the \", /*#__PURE__*/React.createElement(Card.Link, {\n    href: \"https://github.com/mmarkelov/react-nouislider\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 143\n    }\n  }, \"official documentation.\"))));\n});","map":{"version":3,"sources":["/Users/oisinlyons/Downloads/IDENTI3 PRO/src/pages/components/Forms.js"],"names":["React","moment","Datetime","Nouislider","CalendarIcon","SearchIcon","Col","Row","Card","Form","Container","InputGroup","Select","Documentation","selectOptions","value","label","customStyles","control","provided","borderRadius","multiValue","multiValueRemove","placeholder","singleValue","state","opacity","isDisabled","transition"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport Nouislider from \"nouislider-react\";\nimport { CalendarIcon, SearchIcon } from \"@heroicons/react/solid\";\nimport { Col, Row, Card, Form, Container, InputGroup } from 'react-bootstrap';\nimport Select from 'react-select';\n\nimport Documentation from \"components/Documentation\";\n\nexport default () => {\n  const selectOptions = [\n    { value: 'bootstrap', label: 'Bootstrap' },\n    { value: 'react', label: 'React' },\n    { value: 'vue', label: 'Vue' },\n    { value: 'angular', label: 'Angular' },\n    { value: 'svelte', label: 'Svelte' },\n    { value: 'laravel', label: 'Laravel' },\n    { value: 'node', label: 'Node' },\n    { value: 'dotnet', label: '.NET' },\n  ];\n\n  const customStyles = {\n\n    control: (provided) => ({\n      ...provided,\n      borderRadius: '.5rem',\n    }),\n\n    multiValue: (provided) => ({\n      ...provided,\n      borderRadius: '.5rem'\n    }),\n\n    multiValueRemove: (provided) => ({\n      ...provided,\n      borderRadius: '.5rem'\n    }),\n\n    placeholder: (provided) => ({\n      ...provided,\n      borderRadius: '.5rem',\n    }),\n\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n\n      return {\n        ...provided,\n        opacity,\n        transition,\n      };\n    }\n  };\n\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Forms</h1>\n            <p className=\"mb-0\">\n              Use form elements such as text inputs, textareas, file uploads and many more to get input from you users.\n            </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <p>Form elements are an important part of the UI to receive text input from the users. The <code>&#x3C;Form&#x3E;</code> component can be used to create forms, form groups, labels, and input elements inside the UI. Check out the following example for a simple email input field and a textarea field:</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Input fields with icon\"\n          description={\n            <p>You can also add icons to the left or right side of the input field by using the <code>&#x3C;InputGroup&#x3E;</code> component and using the <code>&#x3C;InputGroup.Text&#x3E;</code> element with an icon element inside it, either after or before the <code>&#x3C;Form.Control&#x3E;</code> element.</p>\n          }\n          scope={{ Form, InputGroup, SearchIcon }}\n          imports={`import { Form, InputGroup } from 'react-bootstrap';\nimport { SearchIcon } from \"@heroicons/react/solid\";`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Left</Form.Label>\n    <InputGroup>\n      <InputGroup.Text><SearchIcon className=\"icon icon-xs\" /></InputGroup.Text>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n    </InputGroup>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Right</Form.Label>\n    <InputGroup>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n      <InputGroup.Text><SearchIcon className=\"icon icon-xs\" /></InputGroup.Text>\n    </InputGroup>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Validation\"\n          description={\n            <p>You can easily update the styles of a valid or invalid styles input field by using the <code>isValid</code> or <code>isInvalid</code> attributes. Additionally, you can use the <code>&#x3C;Form.Control.Feedback&#x3E;</code> component to write the message regarding the success or error message.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control required isInvalid type=\"text\" />\n    <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>First name</Form.Label>\n    <Form.Control required isValid type=\"text\" defaultValue=\"Mark\" />\n    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Select input\"\n          description={\n            <p>The <code>&#x3C;Form.Select&#x3E;</code> component can be used for option selection from the user. You can use the <code>&#x3C;option&#x3E;</code> elements to add multiple options and use the <code>defaultValue</code> attribute to set the default value of the select field.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Select>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Multiple select\"\n          description=\"\"\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Select multiple>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Textarea\"\n          description={\n            <p>You can create a textarea input field by adding the <code>as=\"textarea\"</code> modifier attribute to the <code>&#x3C;Form.Control&#x3E;</code> component.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <Form.Group>\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"File upload\"\n          description={\n            <p>If you want to use an input field to upload files, you need to add the <code>type=\"file\"</code> attribute to the <code>&#x3C;Form.Control&#x3E;</code> component.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <Form.Control type=\"file\" />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Checkboxes\"\n          description={\n            <>\n              <p>Use the <code>&#x3C;Form.Check&#x3E;</code> component to create checkbox items. If you want to disable on them, you need to add the <code>disabled</code> attribute.</p>\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <Form.Check label=\"Default checkbox\" id=\"checkbox1\" htmlFor=\"checkbox1\" />\n  <Form.Check disabled label=\"Disabled checkbox\" id=\"checkbox2\" htmlFor=\"checkbox2\" />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Radio buttons\"\n          description={\n            <>\n              <p>If you want to use radio buttons, you need to use the <code>&#x3C;Form.Check&#x3E;</code> component with the <code>type=\"radio\"</code> modifier. You can disable the element by using the <code>disabled</code> attribute.</p>\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <fieldset>\n    <Form.Check\n      defaultChecked\n      type=\"radio\"\n      defaultValue=\"option1\"\n      label=\"Default radio\"\n      name=\"exampleRadios\"\n      id=\"radio1\"\n      htmlFor=\"radio1\"\n      />\n\n    <Form.Check\n      type=\"radio\"\n      defaultValue=\"option2\"\n      label=\"Second default radio\"\n      name=\"exampleRadios\"\n      id=\"radio2\"\n      htmlFor=\"radio2\"\n      />\n\n    <Form.Check\n      disabled\n      type=\"radio\"\n      defaultValue=\"option3\"\n      label=\"Disabled radio\"\n      name=\"exampleRadios\"\n      id=\"radio3\"\n      htmlFor=\"radio3\"\n      />\n  </fieldset>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Switches\"\n          description={\n            <>\n              <p>If you want to use the switch component, you need to use the <code>&#x3C;Form.Check&#x3E;</code> component with the <code>type=\"switch\"</code> modifier. If you want to have it checked by default, just add the <code>defaultChecked</code> attribute.</p>\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from 'react-bootstrap';`}\n          example={`<Form>\n  <Form.Check\n    type=\"switch\"\n    label=\"Default switch\"\n    id=\"switch1\"\n    htmlFor=\"switch1\"\n    />\n\n  <Form.Check defaultChecked\n    type=\"switch\"\n    label=\"Checked switch\"\n    id=\"switch2\"\n    htmlFor=\"switch2\"\n    />\n\n  <Form.Check disabled\n    type=\"switch\"\n    label=\"Disabled switch\"\n    id=\"switch3\"\n    htmlFor=\"switch3\"\n    />\n\n  <Form.Check disabled defaultChecked\n    type=\"switch\"\n    label=\"Disabled checked switch\"\n    id=\"switch4\"\n    htmlFor=\"switch4\"\n    />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Datepicker\"\n          description={\n            <p>Use the <code>&#x3C;Datetime&#x3E;</code> component to use a datepicker as an input field. You can read more about the options that you can use for this component by reading the <Card.Link href=\"https://www.npmjs.com/package/react-datetime\" target=\"_blank\">react-datetime</Card.Link> documentation.</p>\n          }\n          scope={{ Datetime, Form, InputGroup, CalendarIcon, moment }}\n          imports={`import React, { useState } from \"react\";\nimport { Form, InputGroup } from 'react-bootstrap';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment-timezone\";\n\nimport { faCalendarAlt } from \"@heroicons/react/solid\";`}\n          example={`const Datepicker = () => {\n  const [birthday, setBirthday] = React.useState(\"\");\n\n  return(\n    <Form>\n      <Form.Group className=\"mb-3\">\n        <Datetime\n          timeFormat={false}\n          closeOnSelect={false}\n          onChange={setBirthday}\n          renderInput={(props, openCalendar) => (\n            <InputGroup>\n              <InputGroup.Text><CalendarIcon className=\"icon icon-xs\" /></InputGroup.Text>\n              <Form.Control\n                required\n                type=\"text\"\n                value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\n                placeholder=\"mm/dd/yyyy\"\n                onFocus={openCalendar}\n                onChange={() => { }} />\n            </InputGroup>\n          )} />\n      </Form.Group>\n    </Form>\n  );\n}\n\nrender( <Datepicker /> )`}\n        />\n\n        <Documentation\n          title=\"Searchable select\"\n          description={\n            <p>Using the advanced <code>&#x3C;Select&#x3E;</code> component you can create an input field where you can select items, but also search for them. The <code>selectOptions</code> constant should be an object of key and value pairs that will be added to the <code>options</code> attribute of the <code>&#x3C;Select&#x3E;</code> component.</p>\n          }\n          scope={{ Select, Form, selectOptions, customStyles }}\n          imports={`import Select from \"react-select\";\nimport { Form } from 'react-bootstrap';\n\nconst selectOptions = [\n  { value: 'bootstrap', label: 'Bootstrap' },\n  { value: 'react', label: 'React' },\n  { value: 'vue', label: 'Vue' },\n  { value: 'angular', label: 'Angular' },\n  { value: 'svelte', label: 'Svelte' },\n];\n\nconst customStyles = {\n\n  control: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem',\n  }),\n\n  multiValue: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem'\n  }),\n\n  multiValueRemove: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem'\n  }),\n\n  placeholder: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem',\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...provided,\n      opacity,\n      transition,\n    };\n  }\n};`}\n          example={`<Form>\n  <Form.Group className=\"mb-2\">\n    <Form.Label>Select state</Form.Label>\n    <Select options={selectOptions} styles={customStyles} theme={theme => ({\n      ...theme,\n      borderRadius: 0,\n      colors: {\n        ...theme.colors,\n        primary25: '#61DAFB',\n        primary: '#61DAFB',\n      }\n    })} />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Multiple searchable select\"\n          description={\n            <p>Using tags and multiple options for the <code>&#x3C;Select&#x3E;</code> component is as easy as adding a <code>isMulti</code> attribute to the component.</p>\n          }\n          scope={{ Select, Form, selectOptions, customStyles }}\n          imports={`import Select from \"react-select\";\nimport { Form } from 'react-bootstrap';\n\nconst selectOptions = [\n  { value: 'bootstrap', label: 'Bootstrap' },\n  { value: 'react', label: 'React' },\n  { value: 'vue', label: 'Vue' },\n  { value: 'angular', label: 'Angular' },\n  { value: 'svelte', label: 'Svelte' },\n];\n\nconst customStyles = {\n\n  control: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem',\n  }),\n\n  multiValue: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem'\n  }),\n\n  multiValueRemove: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem'\n  }),\n\n  placeholder: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem',\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...provided,\n      opacity,\n      transition,\n    };\n  }\n};`}\n          example={`<Form>\n  <Form.Group className=\"mb-2\">\n    <Form.Label>Select state</Form.Label>\n    <Select options={selectOptions} theme={theme => ({\n      ...theme,\n      borderRadius: 0,\n      colors: {\n        ...theme.colors,\n        primary25: '#61DAFB',\n        primary: '#61DAFB',\n      }\n    })} styles={customStyles} isMulti />\n  </Form.Group>\n</Form>`}\n        />\n\n        <p>There are many options that you can use with the <code>react-select</code> library. Read more about the possibilities by browsing the <Card.Link href=\"https://react-select.com/home\" target=\"_blank\">official documentation.</Card.Link></p>\n\n        <Documentation\n          title=\"Range slider\"\n          description={\n            <p>You can use the <code>&#x3C;Nouislider&#x3E;</code> component to create a range slider component and retreive count information from your users. You can set the start position of the slider position using the <code>start</code> attribute and set the minimum and maximum range using the <code>range</code> attribute.</p>\n          }\n          scope={{ Form, Nouislider }}\n          imports={`import { Form } from 'react-bootstrap';\nimport Nouislider from \"nouislider-react\";`}\n          example={`<Form>\n  <Nouislider\n    connect=\"lower\"\n    className=\"input-slider\"\n    start={200}\n    range={{ min: 100, max: 500 }}\n  />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Range slider count\"\n          description={\n            <p>In this example we show you how to use the <code>&#x3C;Nouislider&#x3E;</code> component to also show the value of the position of the slider using tooltips.</p>\n          }\n          scope={{ Form, Nouislider }}\n          imports={`import { Form } from 'react-bootstrap';\nimport Nouislider from \"nouislider-react\";`}\n          example={`<Form>\n  <Nouislider\n    tooltips={true}\n    connect={true}\n    className=\"input-slider\"\n    start={[200, 400]}\n    range={{ min: 100, max: 500 }}\n  />\n</Form>`}\n        />\n        <p>If you want read more about what options you can use with the <code>&#x3C;Nouislider&#x3E;</code> component, you can check out the <Card.Link href=\"https://github.com/mmarkelov/react-nouislider\" target=\"_blank\">official documentation.</Card.Link></p>\n      </Container>\n    </article>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}