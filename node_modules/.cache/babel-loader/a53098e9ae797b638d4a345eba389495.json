{"ast":null,"code":"import _objectWithoutProperties from \"/Users/oisinlyons/Downloads/IDENTI3 PRO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Users/oisinlyons/Downloads/IDENTI3 PRO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/oisinlyons/Downloads/IDENTI3 PRO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/oisinlyons/Downloads/IDENTI3 PRO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/oisinlyons/Downloads/IDENTI3 PRO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/oisinlyons/Downloads/IDENTI3 PRO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _excluded = [\"listId\", \"cardId\"],\n    _excluded2 = [\"listId\", \"cardIndex\"];\n\nvar _jsxFileName = \"/Users/oisinlyons/Downloads/IDENTI3 PRO/src/pages/Kanban.js\",\n    _this = this;\n\nimport React, { useState } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Col, Row, Button, Container } from \"react-bootstrap\";\nimport KanbanHeader from \"components/KanbanHeader\";\nimport KanbanList from \"components/KanbanList\";\nimport KanbanCard from \"components/KanbanCard\";\nimport { KanbanCreateModal, KanbanEditModal, KanbanCopyModal, KanbanMoveModal, KanbanEditMembersModal, KanbanEditLabelsModal } from \"components/Modals\";\nimport KANBAN_LISTS, { createCard, createList } from \"data/kanban\";\nimport { ArchiveIcon, PlusIcon } from \"@heroicons/react/solid\";\nvar ArchiveIconHtml = ReactDOMServer.renderToString( /*#__PURE__*/React.createElement(ArchiveIcon, {\n  className: \"h-50 w-auto\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}));\nvar SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-primary me-3\",\n    cancelButton: \"btn btn-gray\"\n  },\n  buttonsStyling: false\n}));\nexport default (function () {\n  var _useState = useState(KANBAN_LISTS),\n      _useState2 = _slicedToArray(_useState, 2),\n      kanbanLists = _useState2[0],\n      setKanbanLists = _useState2[1];\n\n  var createCardDefaultProps = {\n    listId: kanbanLists[0].id,\n    cardIndex: 0\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showCreateCardModal = _useState4[0],\n      setShowCreateCardModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showCreateListModal = _useState6[0],\n      setShowCreateListModal = _useState6[1];\n\n  var _useState7 = useState(createCardDefaultProps),\n      _useState8 = _slicedToArray(_useState7, 2),\n      createCardProps = _useState8[0],\n      setCreateCardProps = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cardToEdit = _useState10[0],\n      setCardToEdit = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cardToCopy = _useState12[0],\n      setCardToCopy = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cardToMove = _useState14[0],\n      setCardToMove = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cardToChangeMembers = _useState16[0],\n      setCardToChangeMembers = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      cardToChangeLabels = _useState18[0],\n      setCardToChangeLabels = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      listToCopy = _useState20[0],\n      setListToCopy = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      listToMoveIndex = _useState22[0],\n      setListToMoveIndex = _useState22[1];\n\n  var toggleCreateListModal = function toggleCreateListModal() {\n    setShowCreateListModal(!showCreateListModal);\n  };\n\n  var toggleCreateCardModal = function toggleCreateCardModal() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    setCreateCardProps(_objectSpread(_objectSpread({}, createCardDefaultProps), props));\n    setShowCreateCardModal(!showCreateCardModal);\n  };\n\n  var getCardStyle = function getCardStyle(style, snapshot) {\n    var isJustDragging = snapshot.isDragging && !snapshot.isDropAnimating;\n\n    if (!isJustDragging) {\n      return style;\n    }\n\n    return _objectSpread(_objectSpread({}, style), {}, {\n      transform: \"\".concat(style.transform || \"\", \" rotate(6deg)\")\n    });\n  };\n\n  var handleCreateCard = function handleCreateCard() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var listsUpdated = createCardInListAtIndex(_objectSpread(_objectSpread({}, createCardProps), props));\n    toggleCreateCardModal();\n    setKanbanLists(listsUpdated);\n  };\n\n  var handleCopyCard = function handleCopyCard() {\n    var card = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var listId = card.listId,\n        title = card.title,\n        description = card.description;\n    var listsUpdated = createCardInListAtIndex({\n      listId: listId,\n      title: title,\n      description: description\n    });\n    setCardToCopy(null);\n    setKanbanLists(listsUpdated);\n  };\n\n  var handleMoveList = function handleMoveList(_ref) {\n    var source = _ref.source,\n        destination = _ref.destination;\n\n    var lists = _toConsumableArray(kanbanLists);\n\n    var _lists$splice = lists.splice(source.index, 1),\n        _lists$splice2 = _slicedToArray(_lists$splice, 1),\n        listRemoved = _lists$splice2[0];\n\n    lists.splice(destination.index, 0, listRemoved);\n    setKanbanLists(lists);\n    setListToMoveIndex(null);\n  };\n\n  var handleCreateList = function handleCreateList(props) {\n    var newList = createList(props);\n    var listsUpdated = [].concat(_toConsumableArray(kanbanLists), [newList]);\n    setShowCreateListModal(false);\n    setKanbanLists(listsUpdated);\n    setListToCopy(null);\n  };\n\n  var reorderCards = function reorderCards() {\n    var cards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var startIndex = arguments.length > 1 ? arguments[1] : undefined;\n    var endIndex = arguments.length > 2 ? arguments[2] : undefined;\n\n    var _cards$splice = cards.splice(startIndex, 1),\n        _cards$splice2 = _slicedToArray(_cards$splice, 1),\n        cardRemoved = _cards$splice2[0];\n\n    cards.splice(endIndex, 0, cardRemoved);\n    return cards;\n  };\n\n  var moveCardFromList = function moveCardFromList(sList, dList, sIndex, dIndex) {\n    var sCards = _toConsumableArray(sList.cards);\n\n    var dCards = _toConsumableArray(dList.cards);\n\n    var _sCards$splice = sCards.splice(sIndex, 1),\n        _sCards$splice2 = _slicedToArray(_sCards$splice, 1),\n        cardRemoved = _sCards$splice2[0];\n\n    dCards.splice(dIndex, 0, cardRemoved);\n    return [_objectSpread(_objectSpread({}, sList), {}, {\n      cards: sCards\n    }), _objectSpread(_objectSpread({}, dList), {}, {\n      cards: dCards\n    })];\n  };\n\n  var handleDragEnd = function handleDragEnd(dragResult) {\n    var source = dragResult.source,\n        destination = dragResult.destination; //  dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    var sListId = source.droppableId,\n        sCardIndex = source.index;\n    var dListId = destination.droppableId,\n        dCardIndex = destination.index;\n    var sList = kanbanLists.find(function (l) {\n      return l.id === sListId;\n    });\n    var dList = kanbanLists.find(function (l) {\n      return l.id === dListId;\n    });\n\n    if (sListId === dListId) {\n      // reorder cards in the list only if card's index changes\n      if (sCardIndex !== dCardIndex) {\n        var sCardsUpdated = reorderCards(sList.cards, sCardIndex, dCardIndex);\n        var listsUpdated = kanbanLists.map(function (l) {\n          return l.id === sListId ? _objectSpread(_objectSpread({}, l), {}, {\n            cards: sCardsUpdated\n          }) : l;\n        });\n        setKanbanLists(listsUpdated);\n      }\n    } else {\n      var _moveCardFromList = moveCardFromList(sList, dList, sCardIndex, dCardIndex),\n          _moveCardFromList2 = _slicedToArray(_moveCardFromList, 2),\n          sListUpdated = _moveCardFromList2[0],\n          dListUpdated = _moveCardFromList2[1];\n\n      var _listsUpdated = kanbanLists.map(function (l) {\n        return l.id === sListId ? sListUpdated : l.id === dListId ? dListUpdated : l;\n      });\n\n      setKanbanLists(_listsUpdated);\n    }\n\n    if (cardToMove) {\n      setCardToMove(null);\n    }\n  };\n\n  var removeCardsFromList = function removeCardsFromList(cards) {\n    var cardsGroupedByListId = cards.reduce(function (acc, card) {\n      var listId = card.listId,\n          cardId = card.cardId;\n      if (!acc[listId]) acc[listId] = [cardId];else acc[listId].push(cardId);\n      return acc;\n    }, {});\n    var listsUpdated = kanbanLists.map(function (l) {\n      var cardsToDelete = cardsGroupedByListId[l.id];\n      if (!cardsToDelete) return l;\n      var cardsUpdated = l.cards.filter(function (c) {\n        return !cardsToDelete.includes(c.id);\n      });\n      return _objectSpread(_objectSpread({}, l), {}, {\n        cards: cardsUpdated\n      });\n    });\n    return listsUpdated;\n  };\n\n  var handleListDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(listId) {\n      var result, listsUpdated;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return SwalWithBootstrapButtons.fire({\n                icon: \"error\",\n                title: \"Confirm deletion\",\n                text: \"Are you sure do you want to delete this list?\",\n                showCancelButton: true,\n                confirmButtonText: \"Yes\",\n                cancelButtonText: \"Cancel\"\n              });\n\n            case 2:\n              result = _context.sent;\n\n              if (!result.isConfirmed) {\n                _context.next = 8;\n                break;\n              }\n\n              listsUpdated = kanbanLists.filter(function (l) {\n                return l.id !== listId;\n              });\n              setKanbanLists(listsUpdated);\n              _context.next = 8;\n              return SwalWithBootstrapButtons.fire(\"Deleted\", \"The list has been deleted.\", \"success\");\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleListDelete(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleCardsDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var cards,\n          cardsNr,\n          textMessage,\n          result,\n          listsUpdated,\n          confirmMessage,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              cards = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : [];\n              cardsNr = cards.length;\n              textMessage = cardsNr === 1 ? \"Are you sure do you want to delete this card?\" : \"Are you sure do you want to delete these \".concat(cardsNr, \" cards?\");\n              _context2.next = 5;\n              return SwalWithBootstrapButtons.fire({\n                icon: \"error\",\n                title: \"Confirm deletion\",\n                text: textMessage,\n                showCancelButton: true,\n                confirmButtonText: \"Yes\",\n                cancelButtonText: \"Cancel\"\n              });\n\n            case 5:\n              result = _context2.sent;\n\n              if (!result.isConfirmed) {\n                _context2.next = 12;\n                break;\n              }\n\n              listsUpdated = removeCardsFromList(cards);\n              setKanbanLists(listsUpdated);\n              confirmMessage = cardsNr === 1 ? \"The card has been deleted.\" : \"The cards have been deleted.\";\n              _context2.next = 12;\n              return SwalWithBootstrapButtons.fire(\"Deleted\", confirmMessage, \"success\");\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleCardsDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleArchiveCards = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var cards,\n          cardsNr,\n          textMessage,\n          result,\n          listsUpdated,\n          confirmMessage,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              cards = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : [];\n              cardsNr = cards.length;\n              textMessage = cardsNr === 1 ? \"Are you sure do you want to archive this card?\" : \"Are you sure do you want to archive these \".concat(cardsNr, \" cards?\");\n              _context3.next = 5;\n              return SwalWithBootstrapButtons.fire({\n                icon: \"question\",\n                iconHtml: ArchiveIconHtml,\n                title: \"Confirm archivation\",\n                text: textMessage,\n                showCancelButton: true,\n                confirmButtonText: \"Yes\",\n                cancelButtonText: \"Cancel\"\n              });\n\n            case 5:\n              result = _context3.sent;\n\n              if (!result.isConfirmed) {\n                _context3.next = 13;\n                break;\n              }\n\n              setCardToEdit(null);\n              listsUpdated = removeCardsFromList(cards);\n              setKanbanLists(listsUpdated);\n              confirmMessage = cardsNr === 1 ? \"The card has been archived.\" : \"The cards have been archived.\";\n              _context3.next = 13;\n              return SwalWithBootstrapButtons.fire('Archived', confirmMessage, 'success');\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleArchiveCards() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleListTitleChange = function handleListTitleChange(_ref5) {\n    var id = _ref5.id,\n        title = _ref5.title;\n    var listsUpdated = kanbanLists.map(function (l) {\n      return l.id === id ? _objectSpread(_objectSpread({}, l), {}, {\n        title: title\n      }) : l;\n    });\n    setKanbanLists(listsUpdated);\n  };\n\n  var handleCardChange = function handleCardChange(props) {\n    var listId = props.listId,\n        cardId = props.cardId,\n        otherProps = _objectWithoutProperties(props, _excluded);\n\n    var listsUpdated = kanbanLists.map(function (l) {\n      if (l.id !== listId) return l;\n      var cards = l.cards.map(function (c) {\n        return c.id === cardId ? _objectSpread(_objectSpread({}, c), otherProps) : c;\n      });\n      return _objectSpread(_objectSpread({}, l), {}, {\n        cards: cards\n      });\n    });\n\n    if (cardToEdit) {\n      setCardToEdit(_objectSpread(_objectSpread({}, cardToEdit), otherProps));\n    }\n\n    setKanbanLists(listsUpdated);\n    setCardToChangeMembers(null);\n  };\n\n  var createCardInListAtIndex = function createCardInListAtIndex(props) {\n    var listId = props.listId,\n        cardIndex = props.cardIndex,\n        otherProps = _objectWithoutProperties(props, _excluded2);\n\n    var listsUpdated = kanbanLists.map(function (l) {\n      if (listId !== l.id) return l;\n      var newCard = createCard(otherProps);\n      l.cards.splice(cardIndex, 0, newCard);\n      return l;\n    });\n    return listsUpdated;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showCreateCardModal && /*#__PURE__*/React.createElement(KanbanCreateModal, {\n    show: showCreateCardModal,\n    onHide: toggleCreateCardModal,\n    onSubmit: handleCreateCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }), cardToEdit && /*#__PURE__*/React.createElement(KanbanEditModal, Object.assign({\n    show: true\n  }, cardToEdit, {\n    onHide: function onHide() {\n      return setCardToEdit(null);\n    },\n    onArchive: function onArchive(card) {\n      return handleArchiveCards([card]);\n    },\n    onMove: function onMove(card) {\n      return setCardToMove(card);\n    },\n    onEditMembers: function onEditMembers(card) {\n      return setCardToChangeMembers(card);\n    },\n    onEditLabels: function onEditLabels(card) {\n      return setCardToChangeLabels(card);\n    },\n    onChange: handleCardChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  })), cardToChangeMembers && /*#__PURE__*/React.createElement(KanbanEditMembersModal, Object.assign({\n    show: true\n  }, cardToChangeMembers, {\n    onHide: function onHide() {\n      return setCardToChangeMembers(null);\n    },\n    onSubmit: handleCardChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  })), cardToChangeLabels && /*#__PURE__*/React.createElement(KanbanEditLabelsModal, Object.assign({\n    show: true\n  }, cardToChangeLabels, {\n    onHide: function onHide() {\n      return setCardToChangeLabels(null);\n    },\n    onSubmit: handleCardChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  })), cardToCopy && /*#__PURE__*/React.createElement(KanbanCopyModal, Object.assign({\n    show: true\n  }, cardToCopy, {\n    lists: kanbanLists,\n    onHide: function onHide() {\n      return setCardToCopy(null);\n    },\n    onSubmit: handleCopyCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  })), cardToMove && /*#__PURE__*/React.createElement(KanbanMoveModal, Object.assign({\n    show: true\n  }, cardToMove, {\n    lists: kanbanLists,\n    onHide: function onHide() {\n      return setCardToMove(null);\n    },\n    onSubmit: handleDragEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  })), showCreateListModal && /*#__PURE__*/React.createElement(KanbanCreateModal, {\n    type: \"list\",\n    modalTitle: \"Add a new list\",\n    show: showCreateListModal,\n    onHide: toggleCreateListModal,\n    onSubmit: handleCreateList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }), listToCopy && /*#__PURE__*/React.createElement(KanbanCopyModal, Object.assign({\n    show: true,\n    type: \"list\"\n  }, listToCopy, {\n    onHide: function onHide() {\n      return setListToCopy(null);\n    },\n    onSubmit: handleCreateList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  })), listToMoveIndex !== null && /*#__PURE__*/React.createElement(KanbanMoveModal, {\n    show: true,\n    type: \"list\",\n    lists: kanbanLists,\n    listIndex: listToMoveIndex,\n    onHide: function onHide() {\n      return setListToMoveIndex(null);\n    },\n    onSubmit: handleMoveList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KanbanHeader, {\n    onNewCard: toggleCreateCardModal,\n    onArchive: handleArchiveCards,\n    onDelete: handleCardsDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"kanban-container py-4 px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-nowrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, kanbanLists.map(function (list, ind) {\n    var listId = list.id,\n        cards = list.cards;\n    return /*#__PURE__*/React.createElement(Droppable, {\n      index: ind,\n      droppableId: \"\".concat(listId),\n      key: \"kanban-list-\".concat(listId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, function (provided) {\n      var listRef = provided.innerRef,\n          placeholder = provided.placeholder,\n          droppableProps = provided.droppableProps;\n      return /*#__PURE__*/React.createElement(KanbanList, Object.assign({}, list, {\n        listRef: listRef,\n        extraProps: droppableProps,\n        onCardAdd: function onCardAdd() {\n          return toggleCreateCardModal({\n            listId: listId\n          });\n        },\n        onListCopy: function onListCopy() {\n          return setListToCopy(list);\n        },\n        onListMove: function onListMove() {\n          return setListToMoveIndex(ind);\n        },\n        onListDelete: handleListDelete,\n        onTitleChange: handleListTitleChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 23\n        }\n      }), cards.map(function (card, index) {\n        var cardId = card.id;\n        return /*#__PURE__*/React.createElement(Draggable, {\n          index: index,\n          draggableId: \"\".concat(cardId),\n          key: \"kanban-card-\".concat(cardId),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 29\n          }\n        }, function (provided, snapshot) {\n          var cardRef = provided.innerRef,\n              draggableProps = provided.draggableProps,\n              dragHandleProps = provided.dragHandleProps;\n          return /*#__PURE__*/React.createElement(KanbanCard, Object.assign({}, card, {\n            cardRef: cardRef,\n            style: getCardStyle(draggableProps.style, snapshot),\n            extraProps: _objectSpread(_objectSpread({}, draggableProps), dragHandleProps),\n            onDelete: function onDelete() {\n              return handleCardsDelete([{\n                listId: listId,\n                cardId: cardId\n              }]);\n            },\n            onClick: function onClick() {\n              return setCardToEdit(_objectSpread({\n                listId: listId,\n                index: index\n              }, card));\n            },\n            onEdit: function onEdit() {\n              return setCardToEdit(_objectSpread({\n                listId: listId,\n                index: index\n              }, card));\n            },\n            onCopy: function onCopy() {\n              return setCardToCopy(_objectSpread({\n                listId: listId\n              }, card));\n            },\n            onMove: function onMove() {\n              return setCardToMove({\n                listId: listId,\n                index: index\n              });\n            },\n            onChangeMembers: function onChangeMembers() {\n              return setCardToChangeMembers(_objectSpread({\n                listId: listId\n              }, card));\n            },\n            onChangeLabels: function onChangeLabels() {\n              return setCardToChangeLabels(_objectSpread({\n                listId: listId\n              }, card));\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 35\n            }\n          }));\n        });\n      }), placeholder, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-gray-500\",\n        onClick: function onClick() {\n          return toggleCreateCardModal({\n            listId: listId,\n            cardIndex: cards.length\n          });\n        },\n        className: \"d-inline-flex align-items-center justify-content-center dashed-outline new-card w-100\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(PlusIcon, {\n        className: \"icon icon-xs me-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 27\n        }\n      }), \" Add another card\"));\n    });\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    lg: 6,\n    xl: 4,\n    xxl: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-gray-500\",\n    onClick: toggleCreateListModal,\n    className: \"d-inline-flex align-items-center justify-content-center dashed-outline new-card w-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PlusIcon, {\n    className: \"icon icon-xs me-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }), \" Add another list\"))))));\n});","map":{"version":3,"sources":["/Users/oisinlyons/Downloads/IDENTI3 PRO/src/pages/Kanban.js"],"names":["React","useState","ReactDOMServer","Swal","withReactContent","DragDropContext","Droppable","Draggable","Col","Row","Button","Container","KanbanHeader","KanbanList","KanbanCard","KanbanCreateModal","KanbanEditModal","KanbanCopyModal","KanbanMoveModal","KanbanEditMembersModal","KanbanEditLabelsModal","KANBAN_LISTS","createCard","createList","ArchiveIcon","PlusIcon","ArchiveIconHtml","renderToString","SwalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","kanbanLists","setKanbanLists","createCardDefaultProps","listId","id","cardIndex","showCreateCardModal","setShowCreateCardModal","showCreateListModal","setShowCreateListModal","createCardProps","setCreateCardProps","cardToEdit","setCardToEdit","cardToCopy","setCardToCopy","cardToMove","setCardToMove","cardToChangeMembers","setCardToChangeMembers","cardToChangeLabels","setCardToChangeLabels","listToCopy","setListToCopy","listToMoveIndex","setListToMoveIndex","toggleCreateListModal","toggleCreateCardModal","props","getCardStyle","style","snapshot","isJustDragging","isDragging","isDropAnimating","transform","handleCreateCard","listsUpdated","createCardInListAtIndex","handleCopyCard","card","title","description","handleMoveList","source","destination","lists","splice","index","listRemoved","handleCreateList","newList","reorderCards","cards","startIndex","endIndex","cardRemoved","moveCardFromList","sList","dList","sIndex","dIndex","sCards","dCards","handleDragEnd","dragResult","sListId","droppableId","sCardIndex","dListId","dCardIndex","find","l","sCardsUpdated","map","sListUpdated","dListUpdated","removeCardsFromList","cardsGroupedByListId","reduce","acc","cardId","push","cardsToDelete","cardsUpdated","filter","c","includes","handleListDelete","fire","icon","text","showCancelButton","confirmButtonText","cancelButtonText","result","isConfirmed","handleCardsDelete","cardsNr","length","textMessage","confirmMessage","handleArchiveCards","iconHtml","handleListTitleChange","handleCardChange","otherProps","newCard","list","ind","provided","listRef","innerRef","placeholder","droppableProps","cardRef","draggableProps","dragHandleProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Col, Row, Button, Container } from \"react-bootstrap\";\n\nimport KanbanHeader from \"components/KanbanHeader\";\nimport KanbanList from \"components/KanbanList\";\nimport KanbanCard from \"components/KanbanCard\";\nimport { KanbanCreateModal, KanbanEditModal, KanbanCopyModal, KanbanMoveModal, KanbanEditMembersModal, KanbanEditLabelsModal } from \"components/Modals\";\nimport KANBAN_LISTS, { createCard, createList } from \"data/kanban\";\nimport { ArchiveIcon, PlusIcon } from \"@heroicons/react/solid\";\n\nconst ArchiveIconHtml = ReactDOMServer.renderToString(\n  <ArchiveIcon className=\"h-50 w-auto\" />\n);\n\nconst SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-primary me-3\",\n    cancelButton: \"btn btn-gray\"\n  },\n  buttonsStyling: false\n}));\n\nexport default () => {\n  const [kanbanLists, setKanbanLists] = useState(KANBAN_LISTS);\n  const createCardDefaultProps = { listId: kanbanLists[0].id, cardIndex: 0 };\n  const [showCreateCardModal, setShowCreateCardModal] = useState(false);\n  const [showCreateListModal, setShowCreateListModal] = useState(false);\n  const [createCardProps, setCreateCardProps] = useState(createCardDefaultProps);\n  const [cardToEdit, setCardToEdit] = useState(null);\n  const [cardToCopy, setCardToCopy] = useState(null);\n  const [cardToMove, setCardToMove] = useState(null);\n  const [cardToChangeMembers, setCardToChangeMembers] = useState(null);\n  const [cardToChangeLabels, setCardToChangeLabels] = useState(null);\n  const [listToCopy, setListToCopy] = useState(null);\n  const [listToMoveIndex, setListToMoveIndex] = useState(null);\n\n  const toggleCreateListModal = () => {\n    setShowCreateListModal(!showCreateListModal);\n  };\n\n  const toggleCreateCardModal = (props = {}) => {\n    setCreateCardProps({ ...createCardDefaultProps, ...props });\n    setShowCreateCardModal(!showCreateCardModal);\n  };\n\n  const getCardStyle = (style, snapshot) => {\n    const isJustDragging = snapshot.isDragging && !snapshot.isDropAnimating\n\n    if (!isJustDragging) {\n      return style;\n    }\n\n    return {\n      ...style,\n      transform: `${style.transform || \"\"} rotate(6deg)`\n    };\n  };\n\n  const handleCreateCard = (props = {}) => {\n    const listsUpdated = createCardInListAtIndex({ ...createCardProps, ...props });\n\n    toggleCreateCardModal();\n    setKanbanLists(listsUpdated);\n  };\n\n  const handleCopyCard = (card = {}) => {\n    const { listId, title, description, } = card;\n    const listsUpdated = createCardInListAtIndex({ listId, title, description });\n\n    setCardToCopy(null);\n    setKanbanLists(listsUpdated);\n  };\n\n  const handleMoveList = ({ source, destination }) => {\n    const lists = [...kanbanLists];\n    const [listRemoved] = lists.splice(source.index, 1);\n    lists.splice(destination.index, 0, listRemoved);\n\n    setKanbanLists(lists);\n    setListToMoveIndex(null);\n  };\n\n  const handleCreateList = (props) => {\n    const newList = createList(props);\n    const listsUpdated = [...kanbanLists, newList];\n\n    setShowCreateListModal(false);\n    setKanbanLists(listsUpdated);\n    setListToCopy(null);\n  };\n\n  const reorderCards = (cards = [], startIndex, endIndex) => {\n    const [cardRemoved] = cards.splice(startIndex, 1);\n    cards.splice(endIndex, 0, cardRemoved);\n\n    return cards;\n  };\n\n  const moveCardFromList = (sList, dList, sIndex, dIndex) => {\n    const sCards = [...sList.cards];\n    const dCards = [...dList.cards];\n\n    const [cardRemoved] = sCards.splice(sIndex, 1);\n    dCards.splice(dIndex, 0, cardRemoved);\n\n    return [\n      { ...sList, cards: sCards },\n      { ...dList, cards: dCards }\n    ];\n  };\n\n  const handleDragEnd = (dragResult) => {\n    const { source, destination } = dragResult;\n\n    //  dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    const { droppableId: sListId, index: sCardIndex } = source;\n    const { droppableId: dListId, index: dCardIndex } = destination;\n\n    const sList = kanbanLists.find(l => l.id === sListId);\n    const dList = kanbanLists.find(l => l.id === dListId);\n\n    if (sListId === dListId) {\n      // reorder cards in the list only if card's index changes\n      if (sCardIndex !== dCardIndex) {\n        const sCardsUpdated = reorderCards(sList.cards, sCardIndex, dCardIndex);\n        const listsUpdated = kanbanLists.map(l => l.id === sListId ? { ...l, cards: sCardsUpdated } : l);\n        setKanbanLists(listsUpdated);\n      }\n    } else {\n      const [sListUpdated, dListUpdated] = moveCardFromList(sList, dList, sCardIndex, dCardIndex);\n      const listsUpdated = kanbanLists.map(l => l.id === sListId ? sListUpdated : l.id === dListId ? dListUpdated : l);\n      setKanbanLists(listsUpdated);\n    }\n\n    if (cardToMove) {\n      setCardToMove(null);\n    }\n  };\n\n  const removeCardsFromList = (cards) => {\n    const cardsGroupedByListId = cards.reduce((acc, card) => {\n      const { listId, cardId } = card;\n\n      if (!acc[listId]) acc[listId] = [cardId];\n      else acc[listId].push(cardId);\n\n      return acc\n    }, {});\n\n    const listsUpdated = kanbanLists.map(l => {\n      const cardsToDelete = cardsGroupedByListId[l.id];\n      if (!cardsToDelete) return l;\n\n      const cardsUpdated = l.cards.filter(c => !cardsToDelete.includes(c.id));\n      return ({ ...l, cards: cardsUpdated });\n    });\n\n    return listsUpdated;\n  };\n\n  const handleListDelete = async (listId) => {\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"error\",\n      title: \"Confirm deletion\",\n      text: \"Are you sure do you want to delete this list?\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const listsUpdated = kanbanLists.filter(l => l.id !== listId);\n      setKanbanLists(listsUpdated);\n\n      await SwalWithBootstrapButtons.fire(\"Deleted\", \"The list has been deleted.\", \"success\");\n    }\n  };\n\n  const handleCardsDelete = async (cards = []) => {\n    const cardsNr = cards.length;\n    const textMessage = cardsNr === 1\n      ? \"Are you sure do you want to delete this card?\"\n      : `Are you sure do you want to delete these ${cardsNr} cards?`;\n\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"error\",\n      title: \"Confirm deletion\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const listsUpdated = removeCardsFromList(cards);\n      setKanbanLists(listsUpdated);\n\n      const confirmMessage = cardsNr === 1 ? \"The card has been deleted.\" : \"The cards have been deleted.\";\n      await SwalWithBootstrapButtons.fire(\"Deleted\", confirmMessage, \"success\");\n    }\n  };\n\n  const handleArchiveCards = async (cards = []) => {\n    const cardsNr = cards.length;\n    const textMessage = cardsNr === 1\n      ? \"Are you sure do you want to archive this card?\"\n      : `Are you sure do you want to archive these ${cardsNr} cards?`;\n\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"question\",\n      iconHtml: ArchiveIconHtml,\n      title: \"Confirm archivation\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      setCardToEdit(null);\n      const listsUpdated = removeCardsFromList(cards);\n      setKanbanLists(listsUpdated);\n\n      const confirmMessage = cardsNr === 1 ? \"The card has been archived.\" : \"The cards have been archived.\";\n      await SwalWithBootstrapButtons.fire('Archived', confirmMessage, 'success');\n    }\n  };\n\n  const handleListTitleChange = ({ id, title }) => {\n    const listsUpdated = kanbanLists.map(l => l.id === id ? ({ ...l, title }) : l);\n    setKanbanLists(listsUpdated);\n  };\n\n  const handleCardChange = (props) => {\n    const { listId, cardId, ...otherProps } = props;\n\n    const listsUpdated = kanbanLists.map(l => {\n      if (l.id !== listId) return l;\n\n      const cards = l.cards.map(c => c.id === cardId ? ({ ...c, ...otherProps }) : c);\n      return { ...l, cards };\n    });\n\n    if (cardToEdit) {\n      setCardToEdit({ ...cardToEdit, ...otherProps });\n    }\n\n    setKanbanLists(listsUpdated);\n    setCardToChangeMembers(null);\n  };\n\n  const createCardInListAtIndex = (props) => {\n    const { listId, cardIndex, ...otherProps } = props;\n\n    const listsUpdated = kanbanLists.map(l => {\n      if (listId !== l.id) return l;\n\n      const newCard = createCard(otherProps);\n      l.cards.splice(cardIndex, 0, newCard);\n\n      return l;\n    });\n\n    return listsUpdated;\n  };\n\n  return (\n    <>\n      {showCreateCardModal && (\n        <KanbanCreateModal\n          show={showCreateCardModal}\n          onHide={toggleCreateCardModal}\n          onSubmit={handleCreateCard}\n        />\n      )}\n\n      {cardToEdit && (\n        <KanbanEditModal\n          show={true}\n          {...cardToEdit}\n          onHide={() => setCardToEdit(null)}\n          onArchive={(card) => handleArchiveCards([card])}\n          onMove={(card) => setCardToMove(card)}\n          onEditMembers={(card) => setCardToChangeMembers(card)}\n          onEditLabels={(card) => setCardToChangeLabels(card)}\n          onChange={handleCardChange}\n        />\n      )}\n\n      {cardToChangeMembers && (\n        <KanbanEditMembersModal\n          show={true}\n          {...cardToChangeMembers}\n          onHide={() => setCardToChangeMembers(null)}\n          onSubmit={handleCardChange}\n        />\n      )}\n\n      {cardToChangeLabels && (\n        <KanbanEditLabelsModal\n          show={true}\n          {...cardToChangeLabels}\n          onHide={() => setCardToChangeLabels(null)}\n          onSubmit={handleCardChange}\n        />\n      )}\n\n      {cardToCopy && (\n        <KanbanCopyModal\n          show={true}\n          {...cardToCopy}\n          lists={kanbanLists}\n          onHide={() => setCardToCopy(null)}\n          onSubmit={handleCopyCard}\n        />\n      )}\n\n      {cardToMove && (\n        <KanbanMoveModal\n          show={true}\n          {...cardToMove}\n          lists={kanbanLists}\n          onHide={() => setCardToMove(null)}\n          onSubmit={handleDragEnd}\n        />\n      )}\n\n      {showCreateListModal && (\n        <KanbanCreateModal\n          type=\"list\"\n          modalTitle=\"Add a new list\"\n          show={showCreateListModal}\n          onHide={toggleCreateListModal}\n          onSubmit={handleCreateList}\n        />\n      )}\n\n      {listToCopy && (\n        <KanbanCopyModal\n          show={true}\n          type=\"list\"\n          {...listToCopy}\n          onHide={() => setListToCopy(null)}\n          onSubmit={handleCreateList}\n        />\n      )}\n\n      {listToMoveIndex !== null && (\n        <KanbanMoveModal\n          show={true}\n          type=\"list\"\n          lists={kanbanLists}\n          listIndex={listToMoveIndex}\n          onHide={() => setListToMoveIndex(null)}\n          onSubmit={handleMoveList}\n        />\n      )}\n\n      <KanbanHeader\n        onNewCard={toggleCreateCardModal}\n        onArchive={handleArchiveCards}\n        onDelete={handleCardsDelete}\n      />\n\n      <Container fluid className=\"kanban-container py-4 px-0\">\n        <Row className=\"d-flex flex-nowrap\">\n          <DragDropContext onDragEnd={handleDragEnd}>\n            {kanbanLists.map((list, ind) => {\n              const { id: listId, cards } = list;\n\n              return (\n                <Droppable index={ind} droppableId={`${listId}`} key={`kanban-list-${listId}`}>\n                  {provided => {\n                    const { innerRef: listRef, placeholder, droppableProps } = provided;\n\n                    return (\n                      <KanbanList\n                        {...list}\n                        listRef={listRef}\n                        extraProps={droppableProps}\n                        onCardAdd={() => toggleCreateCardModal({ listId })}\n                        onListCopy={() => setListToCopy(list)}\n                        onListMove={() => setListToMoveIndex(ind)}\n                        onListDelete={handleListDelete}\n                        onTitleChange={handleListTitleChange}\n                      >\n                        {cards.map((card, index) => {\n                          const { id: cardId } = card;\n\n                          return (\n                            <Draggable index={index} draggableId={`${cardId}`} key={`kanban-card-${cardId}`}>\n                              {(provided, snapshot) => {\n                                const { innerRef: cardRef, draggableProps, dragHandleProps } = provided;\n\n                                return (\n                                  <KanbanCard\n                                    {...card}\n                                    cardRef={cardRef}\n                                    style={getCardStyle(draggableProps.style, snapshot)}\n                                    extraProps={{ ...draggableProps, ...dragHandleProps }}\n                                    onDelete={() => handleCardsDelete([{ listId, cardId }])}\n                                    onClick={() => setCardToEdit({ listId, index, ...card })}\n                                    onEdit={() => setCardToEdit({ listId, index, ...card })}\n                                    onCopy={() => setCardToCopy({ listId, ...card })}\n                                    onMove={() => setCardToMove({ listId, index })}\n                                    onChangeMembers={() => setCardToChangeMembers({ listId, ...card })}\n                                    onChangeLabels={() => setCardToChangeLabels({ listId, ...card })}\n                                  />\n                                );\n                              }}\n                            </Draggable>\n                          )\n                        })}\n\n                        {placeholder}\n                        <Button\n                          variant=\"outline-gray-500\"\n                          onClick={() => toggleCreateCardModal({ listId, cardIndex: cards.length })}\n                          className=\"d-inline-flex align-items-center justify-content-center dashed-outline new-card w-100\"\n                        >\n                          <PlusIcon className=\"icon icon-xs me-2\" /> Add another card\n                        </Button>\n                      </KanbanList>\n                    );\n                  }}\n                </Droppable>\n              )\n            })}\n          </DragDropContext>\n\n          <Col xs={12} lg={6} xl={4} xxl={3}>\n            <div className=\"d-grid\">\n              <Button\n                variant=\"outline-gray-500\"\n                onClick={toggleCreateListModal}\n                className=\"d-inline-flex align-items-center justify-content-center dashed-outline new-card w-100\"\n              >\n                <PlusIcon className=\"icon icon-xs me-2\" /> Add another list\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}