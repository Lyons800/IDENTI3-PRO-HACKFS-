{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/components/Buttons.js\";\n\nimport React from 'react';\nimport { CloudDownloadIcon, ChatIcon, ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";\nimport { Col, Row, Button, Spinner, Container, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport Documentation from \"components/Documentation\";\nimport { FacebookIcon, GithubIcon, PaypalIcon, PinterestIcon, TwitterIcon, TwitchIcon, YoutubeIcon } from \"components/BrandIcons\";\nexport default (function () {\n  return /*#__PURE__*/React.createElement(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-block mb-4 mb-md-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Buttons\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\"))), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Example\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }\n    }, \"<Button>\"), \" component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 225\n      }\n    }, \"variant\"), \" attribute.\"),\n    scope: {\n      Button: Button\n    },\n    imports: \"import { Button } from 'react-bootstrap';\",\n    example: \"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"m-1\\\">Primary</Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"m-1\\\">Secondary</Button>\\n  <Button variant=\\\"tertiary\\\" className=\\\"m-1\\\">Tertiary</Button>\\n  <Button variant=\\\"info\\\" className=\\\"m-1\\\">Info</Button>\\n  <Button variant=\\\"success\\\" className=\\\"m-1\\\">Success</Button>\\n  <Button variant=\\\"warning\\\" className=\\\"m-1\\\">Warning</Button>\\n  <Button variant=\\\"danger\\\" className=\\\"m-1\\\">Danger</Button>\\n  <Button variant=\\\"gray-900\\\" className=\\\"m-1\\\">Dark</Button>\\n  <Button variant=\\\"gray-700\\\" className=\\\"m-1\\\">Gray</Button>\\n  <Button variant=\\\"gray-100\\\" className=\\\"m-1\\\">Light</Button>\\n  <Button variant=\\\"white\\\" className=\\\"m-1\\\">White</Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Button sizing\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }\n    }, \"<Button>\"), \" component comes with three main sizing options: \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 100\n      }\n    }, \"sm\"), \", default, and \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 130\n      }\n    }, \"lg\"), \". In order to change the size of the button you need to set the size using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 224\n      }\n    }, \"size\"), \" attribute.\"),\n    scope: {\n      Button: Button\n    },\n    imports: \"import { Button } from 'react-bootstrap';\",\n    example: \"<React.Fragment>\\n  <Button variant=\\\"primary\\\" size=\\\"sm\\\" className=\\\"me-2\\\">\\n    Small\\n  </Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"me-2\\\">\\n    Default\\n  </Button>\\n  <Button variant=\\\"tertiary\\\" size=\\\"lg\\\" className=\\\"me-2\\\">\\n    Large\\n  </Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Buttons with outline\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Instead of a fully colored background, you can also choose to style the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 88\n      }\n    }, \"<Button>\"), \" component to only have an outline border by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 174\n      }\n    }, \"outline-primary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 204\n      }\n    }, \"outline-secondary\"), \" modifier classes inside the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 263\n      }\n    }, \"variant\"), \" attribute.\"),\n    scope: {\n      Button: Button\n    },\n    imports: \"import { Button } from 'react-bootstrap';\",\n    example: \"<React.Fragment>\\n  <Button variant=\\\"outline-primary\\\" className=\\\"m-1\\\">Primary</Button>\\n  <Button variant=\\\"outline-secondary\\\" className=\\\"m-1\\\">Secondary</Button>\\n  <Button variant=\\\"outline-tertiary\\\" className=\\\"m-1\\\">Tertiary</Button>\\n  <Button variant=\\\"outline-info\\\" className=\\\"m-1\\\">Info</Button>\\n  <Button variant=\\\"outline-success\\\" className=\\\"m-1\\\">Success</Button>\\n  <Button variant=\\\"outline-danger\\\" className=\\\"m-1\\\">Danger</Button>\\n  <Button variant=\\\"outline-gray-900\\\" className=\\\"m-1\\\">Dark</Button>\\n  <Button variant=\\\"outline-gray-700\\\" className=\\\"m-1\\\">Gray</Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Link buttons\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"If you want to use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 39\n      }\n    }, \"<Button>\"), \" component, but without the appearance of a button, just use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 135\n      }\n    }, \"bsPrefix=\\\"text\\\"\"), \" attribute to create link styled buttons.\"),\n    scope: {\n      Button: Button\n    },\n    imports: \"import { Button } from 'react-bootstrap';\",\n    example: \"<React.Fragment>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#primary\\\" variant=\\\"primary\\\" className=\\\"m-3\\\">Primary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#secondary\\\" variant=\\\"secondary\\\" className=\\\"m-3\\\">Secondary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#tertiary\\\" variant=\\\"tertiary\\\" className=\\\"m-3\\\">Tertiary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#info\\\" variant=\\\"info\\\" className=\\\"m-3\\\">Info</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#success\\\" variant=\\\"success\\\" className=\\\"m-3\\\">Success</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#danger\\\" variant=\\\"danger\\\" className=\\\"m-3\\\">Danger</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#dark\\\" variant=\\\"dark\\\" className=\\\"m-3\\\">Dark</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#gray\\\" variant=\\\"gray-700\\\" className=\\\"m-3\\\">Gray</Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Buttons with icon\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"You may want to use icons inside the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 53\n      }\n    }, \"<Button>\"), \" component, which can be done by simply adding a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 133\n      }\n    }, \"<FontAwesomeIcon>\"), \" component inside the button element.\"),\n    scope: {\n      Button: Button,\n      CloudDownloadIcon: CloudDownloadIcon,\n      ChatIcon: ChatIcon\n    },\n    imports: \"import { Button } from 'react-bootstrap';\\nimport { CloudDownloadIcon, ChatIcon } from \\\"@heroicons/react/solid\\\";\",\n    example: \"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"m-1\\\">\\n    Download <CloudDownloadIcon className=\\\"icon icon-xs ms-1\\\" />\\n  </Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"m-1\\\">\\n    <ChatIcon className=\\\"icon icon-xs me-1\\\" /> Contact Us\\n  </Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Circle buttons\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"If you'd like to create a button with a fully circled appearance, all you need to do is add the two modifier classes of \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 136\n      }\n    }, \"btn-circle\"), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 164\n      }\n    }, \"btn-icon-only\"), \" if you wish to use only icons inside the button.\"),\n    scope: {\n      Button: Button,\n      FacebookIcon: FacebookIcon,\n      TwitterIcon: TwitterIcon\n    },\n    imports: \"import { Button } from 'react-bootstrap';\\nimport { FacebookIcon, TwitterIcon } from \\\"components/BrandIcons\\\";\",\n    example: \"<React.Fragment>\\n  <Button className=\\\"btn-icon-only btn-circle btn-facebook m-1\\\">\\n    <FacebookIcon />\\n  </Button>\\n  <Button className=\\\"btn-icon-only btn-circle btn-twitter m-1\\\">\\n    <TwitterIcon />\\n  </Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Social media buttons\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"We've also built social media specific button styles, so all you need to do to add the specific colors is to update the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 136\n      }\n    }, \"variant\"), \" attribute by adding values, such as \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 193\n      }\n    }, \"facebook\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 216\n      }\n    }, \"twitter\"), \", or \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 241\n      }\n    }, \"pinterest.\"), \". You can also add a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 285\n      }\n    }, \"<FontAwesomeIcon>\"), \" component to use the logo of the social media platforms as an icon.\"),\n    scope: {\n      Button: Button,\n      FacebookIcon: FacebookIcon,\n      PinterestIcon: PinterestIcon,\n      YoutubeIcon: YoutubeIcon,\n      GithubIcon: GithubIcon,\n      TwitchIcon: TwitchIcon,\n      PaypalIcon: PaypalIcon,\n      TwitterIcon: TwitterIcon\n    },\n    imports: \"import { Button } from 'react-bootstrap';\\nimport { BehanceIcon, FacebookIcon, GithubIcon, PaypalIcon, PinterestIcon, TwitchIcon, YoutubeIcon } from \\\"components/BrandIcons\\\";\",\n    example: \"<React.Fragment>\\n  <Button variant=\\\"facebook\\\" className=\\\"me-3 mb-3\\\">\\n    <FacebookIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Login with Facebook\\n  </Button>\\n  <Button variant=\\\"pinterest\\\" className=\\\"me-3 mb-3\\\">\\n    <PinterestIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Share on Pinterest\\n  </Button>\\n  <Button variant=\\\"twitter\\\" className=\\\"text-white me-3 mb-3\\\">\\n    <TwitterIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Share on Twitter\\n  </Button>\\n  <Button variant=\\\"youtube\\\" className=\\\"me-3 mb-3\\\">\\n    <YoutubeIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Watch on YouTube\\n  </Button>\\n  <Button variant=\\\"github\\\" className=\\\"me-3 mb-3\\\">\\n    <GithubIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Login with GitHub\\n  </Button>\\n  <Button variant=\\\"twitch\\\" className=\\\"me-3 mb-3\\\">\\n    <TwitchIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Subscribe Now\\n  </Button>\\n  <Button variant=\\\"paypal\\\" className=\\\"me-3 mb-3\\\">\\n    <PaypalIcon size=\\\"xs\\\" color=\\\"dark\\\" className=\\\"me-2\\\" />\\n    Donate with PayPal\\n  </Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Loading buttons\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, \"By using React you can easily set the state of buttons to be disabled and in a loading state, before the data comes through from the back-end. You can add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 175\n      }\n    }, \"disabled\"), \" modifier attribute and use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 228\n      }\n    }, \"<Spinner>\"), \" component inside the button.\"),\n    scope: {\n      Button: Button,\n      Spinner: Spinner\n    },\n    imports: \"import { Button, Spinner } from 'react-bootstrap';\",\n    example: \"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"d-flex align-items-center mb-1\\\">\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n  </Button>\\n  <Button variant=\\\"primary\\\" className=\\\"d-flex align-items-center mb-1\\\">\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n    <span className=\\\"ms-2\\\">Loading...</span>\\n  </Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"d-flex align-items-center mb-1\\\">\\n    <span className=\\\"me-2\\\">Loading...</span>\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n  </Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Block level Buttons\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, \"Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 141\n      }\n    }, \"w-100\"), \" class to the component.\"),\n    scope: {\n      Button: Button\n    },\n    imports: \"import { Button } from 'react-bootstrap';\",\n    example: \"<Button variant=\\\"secondary\\\" color=\\\"dark\\\" className=\\\"w-100\\\">Block</Button>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Disabled state\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"You may want to disable the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 44\n      }\n    }, \"<Button>\"), \" component for various reasons, so you need to add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 130\n      }\n    }, \"disabled\"), \" attribute in order to achieve that.\"),\n    scope: {\n      Button: Button\n    },\n    imports: \"import { Button } from 'react-bootstrap';\",\n    example: \"<React.Fragment>\\n  <Button disabled variant=\\\"primary\\\" className=\\\"mb-2 me-2\\\">\\n    Primary button\\n  </Button>\\n  <Button disabled variant=\\\"secondary\\\" className=\\\"mb-2 me-2\\\">\\n    Button\\n  </Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Button animations\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"We've added some handy animations for when any element in the UI is hovered upon, so if you want to add an animation to the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 140\n      }\n    }, \"<Button>\"), \" component, all you need to do is use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 213\n      }\n    }, \"animate-up-*\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 240\n      }\n    }, \"animate-right-*\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 270\n      }\n    }, \"animate-down-*\"), \", or \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 302\n      }\n    }, \"animate-left-*\"), \", where the * can be a number from 1 to 5 changing in the animation intensity.\"),\n    scope: {\n      Button: Button\n    },\n    imports: \"import { Button } from 'react-bootstrap';\",\n    example: \"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"animate-up-2 mb-2 me-2\\\">Animate up</Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"animate-right-3 mb-2 me-2\\\">Animate right</Button>\\n  <Button variant=\\\"tertiary\\\" className=\\\"animate-left-3 mb-2 me-2\\\">Animate left</Button>\\n  <Button variant=\\\"success\\\" className=\\\"animate-down-2 mb-2 me-2\\\">Animate down</Button>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Dropdown buttons\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 26\n      }\n    }, \"<Dropdown>\"), \" component coupled with the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 87\n      }\n    }, \"<Button>\"), \" component in order to create dropdown items when clicking on a button. The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 194\n      }\n    }, \" <Dropdown.Toggle>\"), \" is the component that will trigger the dropdown menu, while the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 300\n      }\n    }, \"<Dropdown.Menu>\"), \" is the actual menu where you can add the dropdown items.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 22\n      }\n    }, \"<Button>\"), \" component is used either before or after the toggle component, but all of this is wrapped around with the main \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 165\n      }\n    }, \"<Dropdown>\"), \" component.\")),\n    scope: {\n      Button: Button,\n      Dropdown: Dropdown,\n      ButtonGroup: ButtonGroup,\n      ChevronDownIcon: ChevronDownIcon\n    },\n    imports: \"import { Button, Dropdown, ButtonGroup } from 'react-bootstrap';\\nimport { ChevronDownIcon } from \\\"@heroicons/react/solid\\\";\",\n    example: \"<React.Fragment>\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"primary\\\">Primary</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown as={ButtonGroup} className=\\\"mb-2 me-2\\\">\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Dropdown sizing\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, \"You may want to use one of the three main sizing options for the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 81\n      }\n    }, \"<Dropdown>\"), \" component, so in order to do that you only need to use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 174\n      }\n    }, \"size=\\\"md\\\"\"), \" or \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 200\n      }\n    }, \"size=\\\"lg\\\"\"), \" attributes for the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 242\n      }\n    }, \"<Button>\"), \" component inside the dropdown component.\"),\n    scope: {\n      Button: Button,\n      Dropdown: Dropdown,\n      ButtonGroup: ButtonGroup,\n      ChevronDownIcon: ChevronDownIcon\n    },\n    imports: \"import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\\nimport { ChevronDownIcon } from \\\"@heroicons/react/solid\\\";\",\n    example: \"<React.Fragment>\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"sm\\\" variant=\\\"primary\\\">Small</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"secondary\\\">Default</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"secondary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Large</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Dropdown direction\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, \"If you want to change the direction of the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 59\n      }\n    }, \"<Dropdown>\"), \" component, you can do that by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 133\n      }\n    }, \"direction=\\\"*\\\"\"), \" attribute where you can use \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 188\n      }\n    }, \"up\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 205\n      }\n    }, \"right\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 225\n      }\n    }, \"down\"), \", or \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 247\n      }\n    }, \"left\"), \" as attribute values.\"),\n    scope: {\n      Button: Button,\n      Dropdown: Dropdown,\n      ButtonGroup: ButtonGroup,\n      ChevronDownIcon: ChevronDownIcon,\n      ChevronUpIcon: ChevronUpIcon,\n      ChevronLeftIcon: ChevronLeftIcon,\n      ChevronRightIcon: ChevronRightIcon\n    },\n    imports: \"import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\\nimport { ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon } from \\\"@heroicons/react/solid\\\";\",\n    example: \"<React.Fragment>\\n  <Dropdown drop=\\\"up\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"sm\\\" variant=\\\"primary\\\">Up</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <ChevronUpIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"end\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"secondary\\\">Right</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"secondary\\\">\\n      <ChevronRightIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Down</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"start\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Left</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <ChevronLeftIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/components/Buttons.js"],"names":["React","CloudDownloadIcon","ChatIcon","ChevronDownIcon","ChevronUpIcon","ChevronLeftIcon","ChevronRightIcon","Col","Row","Button","Spinner","Container","Dropdown","ButtonGroup","Documentation","FacebookIcon","GithubIcon","PaypalIcon","PinterestIcon","TwitterIcon","TwitchIcon","YoutubeIcon"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { CloudDownloadIcon, ChatIcon, ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";\nimport { Col, Row, Button, Spinner, Container, Dropdown, ButtonGroup } from 'react-bootstrap';\n\nimport Documentation from \"components/Documentation\";\nimport { FacebookIcon, GithubIcon, PaypalIcon, PinterestIcon, TwitterIcon, TwitchIcon, YoutubeIcon } from \"components/BrandIcons\";\n\n\nexport default () => {\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Buttons</h1>\n            <p className=\"mb-0\">\n              Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\n            </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <p>The <code>&#x3C;Button&#x3E;</code> component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the <code>variant</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"info\" className=\"m-1\">Info</Button>\n  <Button variant=\"success\" className=\"m-1\">Success</Button>\n  <Button variant=\"warning\" className=\"m-1\">Warning</Button>\n  <Button variant=\"danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"gray-900\" className=\"m-1\">Dark</Button>\n  <Button variant=\"gray-700\" className=\"m-1\">Gray</Button>\n  <Button variant=\"gray-100\" className=\"m-1\">Light</Button>\n  <Button variant=\"white\" className=\"m-1\">White</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Button sizing\"\n          description={\n            <p>The <code>&#x3C;Button&#x3E;</code> component comes with three main sizing options: <code>sm</code>, default, and <code>lg</code>. In order to change the size of the button you need to set the size using the <code>size</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" size=\"sm\" className=\"me-2\">\n    Small\n  </Button>\n  <Button variant=\"secondary\" className=\"me-2\">\n    Default\n  </Button>\n  <Button variant=\"tertiary\" size=\"lg\" className=\"me-2\">\n    Large\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Buttons with outline\"\n          description={\n            <p>Instead of a fully colored background, you can also choose to style the <code>&#x3C;Button&#x3E;</code> component to only have an outline border by using the <code>outline-primary</code>, <code>outline-secondary</code> modifier classes inside the <code>variant</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"outline-primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"outline-secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"outline-tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"outline-info\" className=\"m-1\">Info</Button>\n  <Button variant=\"outline-success\" className=\"m-1\">Success</Button>\n  <Button variant=\"outline-danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"outline-gray-900\" className=\"m-1\">Dark</Button>\n  <Button variant=\"outline-gray-700\" className=\"m-1\">Gray</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Link buttons\"\n          description={\n            <p>If you want to use the <code>&#x3C;Button&#x3E;</code> component, but without the appearance of a button, just use the <code>bsPrefix=\"text\"</code> attribute to create link styled buttons.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button bsPrefix=\"text\" href=\"#primary\" variant=\"primary\" className=\"m-3\">Primary</Button>\n  <Button bsPrefix=\"text\" href=\"#secondary\" variant=\"secondary\" className=\"m-3\">Secondary</Button>\n  <Button bsPrefix=\"text\" href=\"#tertiary\" variant=\"tertiary\" className=\"m-3\">Tertiary</Button>\n  <Button bsPrefix=\"text\" href=\"#info\" variant=\"info\" className=\"m-3\">Info</Button>\n  <Button bsPrefix=\"text\" href=\"#success\" variant=\"success\" className=\"m-3\">Success</Button>\n  <Button bsPrefix=\"text\" href=\"#danger\" variant=\"danger\" className=\"m-3\">Danger</Button>\n  <Button bsPrefix=\"text\" href=\"#dark\" variant=\"dark\" className=\"m-3\">Dark</Button>\n  <Button bsPrefix=\"text\" href=\"#gray\" variant=\"gray-700\" className=\"m-3\">Gray</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Buttons with icon\"\n          description={\n            <p>You may want to use icons inside the <code>&#x3C;Button&#x3E;</code> component, which can be done by simply adding a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component inside the button element.</p>\n          }\n          scope={{ Button, CloudDownloadIcon, ChatIcon }}\n          imports={`import { Button } from 'react-bootstrap';\nimport { CloudDownloadIcon, ChatIcon } from \"@heroicons/react/solid\";`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"m-1\">\n    Download <CloudDownloadIcon className=\"icon icon-xs ms-1\" />\n  </Button>\n  <Button variant=\"secondary\" className=\"m-1\">\n    <ChatIcon className=\"icon icon-xs me-1\" /> Contact Us\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Circle buttons\"\n          description={\n            <p>If you'd like to create a button with a fully circled appearance, all you need to do is add the two modifier classes of <code>btn-circle</code> and <code>btn-icon-only</code> if you wish to use only icons inside the button.</p>\n          }\n          scope={{ Button, FacebookIcon, TwitterIcon }}\n          imports={`import { Button } from 'react-bootstrap';\nimport { FacebookIcon, TwitterIcon } from \"components/BrandIcons\";`}\n          example={`<React.Fragment>\n  <Button className=\"btn-icon-only btn-circle btn-facebook m-1\">\n    <FacebookIcon />\n  </Button>\n  <Button className=\"btn-icon-only btn-circle btn-twitter m-1\">\n    <TwitterIcon />\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Social media buttons\"\n          description={\n            <p>We've also built social media specific button styles, so all you need to do to add the specific colors is to update the <code>variant</code> attribute by adding values, such as <code>facebook</code>, <code>twitter</code>, or <code>pinterest.</code>. You can also add a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component to use the logo of the social media platforms as an icon.</p>\n          }\n          scope={{ Button, FacebookIcon, PinterestIcon, YoutubeIcon, GithubIcon, TwitchIcon, PaypalIcon, TwitterIcon }}\n          imports={`import { Button } from 'react-bootstrap';\nimport { BehanceIcon, FacebookIcon, GithubIcon, PaypalIcon, PinterestIcon, TwitchIcon, YoutubeIcon } from \"components/BrandIcons\";`}\n          example={`<React.Fragment>\n  <Button variant=\"facebook\" className=\"me-3 mb-3\">\n    <FacebookIcon size=\"xs\" className=\"me-2\" />\n    Login with Facebook\n  </Button>\n  <Button variant=\"pinterest\" className=\"me-3 mb-3\">\n    <PinterestIcon size=\"xs\" className=\"me-2\" />\n    Share on Pinterest\n  </Button>\n  <Button variant=\"twitter\" className=\"text-white me-3 mb-3\">\n    <TwitterIcon size=\"xs\" className=\"me-2\" />\n    Share on Twitter\n  </Button>\n  <Button variant=\"youtube\" className=\"me-3 mb-3\">\n    <YoutubeIcon size=\"xs\" className=\"me-2\" />\n    Watch on YouTube\n  </Button>\n  <Button variant=\"github\" className=\"me-3 mb-3\">\n    <GithubIcon size=\"xs\" className=\"me-2\" />\n    Login with GitHub\n  </Button>\n  <Button variant=\"twitch\" className=\"me-3 mb-3\">\n    <TwitchIcon size=\"xs\" className=\"me-2\" />\n    Subscribe Now\n  </Button>\n  <Button variant=\"paypal\" className=\"me-3 mb-3\">\n    <PaypalIcon size=\"xs\" color=\"dark\" className=\"me-2\" />\n    Donate with PayPal\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Loading buttons\"\n          description={\n            <p>By using React you can easily set the state of buttons to be disabled and in a loading state, before the data comes through from the back-end. You can add the <code>disabled</code> modifier attribute and use the <code>&#x3C;Spinner&#x3E;</code> component inside the button.</p>\n          }\n          scope={{ Button, Spinner }}\n          imports={`import { Button, Spinner } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"d-flex align-items-center mb-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n  <Button variant=\"primary\" className=\"d-flex align-items-center mb-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n    <span className=\"ms-2\">Loading...</span>\n  </Button>\n  <Button variant=\"secondary\" className=\"d-flex align-items-center mb-1\">\n    <span className=\"me-2\">Loading...</span>\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Block level Buttons\"\n          description={\n            <p>Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the <code>w-100</code> class to the component.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<Button variant=\"secondary\" color=\"dark\" className=\"w-100\">Block</Button>`}\n        />\n\n        <Documentation\n          title=\"Disabled state\"\n          description={\n            <p>You may want to disable the <code>&#x3C;Button&#x3E;</code> component for various reasons, so you need to add the <code>disabled</code> attribute in order to achieve that.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button disabled variant=\"primary\" className=\"mb-2 me-2\">\n    Primary button\n  </Button>\n  <Button disabled variant=\"secondary\" className=\"mb-2 me-2\">\n    Button\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Button animations\"\n          description={\n            <p>We've added some handy animations for when any element in the UI is hovered upon, so if you want to add an animation to the <code>&#x3C;Button&#x3E;</code> component, all you need to do is use the <code>animate-up-*</code>, <code>animate-right-*</code>, <code>animate-down-*</code>, or <code>animate-left-*</code>, where the * can be a number from 1 to 5 changing in the animation intensity.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"animate-up-2 mb-2 me-2\">Animate up</Button>\n  <Button variant=\"secondary\" className=\"animate-right-3 mb-2 me-2\">Animate right</Button>\n  <Button variant=\"tertiary\" className=\"animate-left-3 mb-2 me-2\">Animate left</Button>\n  <Button variant=\"success\" className=\"animate-down-2 mb-2 me-2\">Animate down</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown buttons\"\n          description={\n            <>\n              <p>Use the <code>&#x3C;Dropdown&#x3E;</code> component coupled with the <code>&#x3C;Button&#x3E;</code> component in order to create dropdown items when clicking on a button. The <code> &#x3C;Dropdown.Toggle&#x3E;</code> is the component that will trigger the dropdown menu, while the <code>&#x3C;Dropdown.Menu&#x3E;</code> is the actual menu where you can add the dropdown items.</p>\n              <p>The <code>&#x3C;Button&#x3E;</code> component is used either before or after the toggle component, but all of this is wrapped around with the main <code>&#x3C;Dropdown&#x3E;</code> component.</p>\n            </>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, ChevronDownIcon }}\n          imports={`import { Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { ChevronDownIcon } from \"@heroicons/react/solid\";`}\n          example={`<React.Fragment>\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"primary\">Primary</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown as={ButtonGroup} className=\"mb-2 me-2\">\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown sizing\"\n          description={\n            <p>You may want to use one of the three main sizing options for the <code>&#x3C;Dropdown&#x3E;</code> component, so in order to do that you only need to use the <code>size=\"md\"</code> or <code>size=\"lg\"</code> attributes for the <code>&#x3C;Button&#x3E;</code> component inside the dropdown component.</p>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, ChevronDownIcon }}\n          imports={`import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\nimport { ChevronDownIcon } from \"@heroicons/react/solid\";`}\n          example={`<React.Fragment>\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Small</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Default</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Large</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown direction\"\n          description={\n            <p>If you want to change the direction of the <code>&#x3C;Dropdown&#x3E;</code> component, you can do that by using the <code>direction=\"*\"</code> attribute where you can use <code>up</code>, <code>right</code>, <code>down</code>, or <code>left</code> as attribute values.</p>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon }}\n          imports={`import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\nimport { ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";`}\n          example={`<React.Fragment>\n  <Dropdown drop=\"up\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Up</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <ChevronUpIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"end\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Right</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <ChevronRightIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Down</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"start\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Left</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <ChevronLeftIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n      </Container>\n    </article>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}