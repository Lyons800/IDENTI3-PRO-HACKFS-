{"ast":null,"code":"import _toConsumableArray from \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/components/Charts.js\";\n\nimport React from \"react\";\nimport ApexChart from \"react-apexcharts\";\nimport { dailySales, weeklySales, monthlySales, yearlySales, customers, revenue, users, weeklyReport } from \"data/charts\";\nexport var SalesValueChart = function SalesValueChart(_ref) {\n  var _ref$period = _ref.period,\n      period = _ref$period === void 0 ? \"week\" : _ref$period;\n  var periodData, periodLabels;\n\n  switch (period) {\n    case \"day\":\n      periodData = dailySales.data;\n      periodLabels = dailySales.labels;\n      break;\n\n    case \"month\":\n      periodData = monthlySales.data;\n      periodLabels = monthlySales.labels;\n      break;\n\n    case \"year\":\n      periodData = yearlySales.data;\n      periodLabels = yearlySales.labels;\n      break;\n\n    default:\n      periodData = weeklySales.data;\n      periodLabels = weeklySales.labels;\n      break;\n  }\n\n  var chartSeries = [{\n    name: \"Sales\",\n    data: periodData\n  }];\n  var chartOptions = {\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#262B40',\n      toolbar: {\n        show: true,\n        offsetX: 0,\n        offsetY: 0,\n        tools: {\n          download: false,\n          selection: false,\n          zoom: false,\n          zoomin: true,\n          zoomout: true,\n          pan: false,\n          reset: false | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n          customIcons: []\n        },\n        export: {\n          csv: {\n            filename: undefined,\n            columnDelimiter: ',',\n            headerCategory: 'category',\n            headerValue: 'value',\n            dateFormatter: function dateFormatter(timestamp) {\n              return new Date(timestamp).toDateString();\n            }\n          }\n        },\n        autoSelected: 'zoom'\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    tooltip: {\n      style: {\n        fontSize: '14px',\n        fontFamily: 'Inter'\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#17a5ce'\n      }\n    },\n    grid: {\n      show: true,\n      borderColor: '#61DAFB',\n      strokeDashArray: 1\n    },\n    markers: {\n      size: 5,\n      strokeColors: '#17a5ce',\n      hover: {\n        size: undefined,\n        sizeOffset: 3\n      }\n    },\n    xaxis: {\n      categories: periodLabels,\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      },\n      axisBorder: {\n        color: '#61DAFB'\n      },\n      axisTicks: {\n        color: '#61DAFB'\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: ['#262B40'],\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      }\n    },\n    responsive: [{\n      breakpoint: 768,\n      options: {\n        yaxis: {\n          show: false\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"area\",\n    height: 420,\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  });\n};\nexport var CustomersChart = function CustomersChart() {\n  var chartSeries = [{\n    name: 'Customers',\n    data: customers.data\n  }];\n  var chartOptions = {\n    labels: customers.labels,\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#31316A'\n      }\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter'\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"area\",\n    height: 140,\n    width: \"100%\",\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  });\n};\nexport var RevenueChart = function RevenueChart() {\n  var chartSeries = [{\n    name: 'Revenue',\n    data: revenue.data\n  }];\n  var chartOptions = {\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#31316A'\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '25%',\n        borderRadius: 5,\n        radiusOnLastStackedBar: true,\n        colors: {\n          backgroundBarColors: ['#F2F4F6', '#F2F4F6', '#F2F4F6', '#F2F4F6'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    xaxis: {\n      categories: revenue.labels,\n      crosshairs: {\n        width: 1\n      }\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter'\n      },\n      y: {\n        formatter: function formatter(val) {\n          return \"$ \" + val + \"k\";\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"bar\",\n    height: 140,\n    width: \"100%\",\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  });\n};\nexport var UsersChart = function UsersChart() {\n  var chartSeries = [{\n    name: 'Users',\n    data: users.data\n  }];\n  var chartOptions = {\n    labels: users.labels,\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#31316A'\n      }\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter'\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"area\",\n    height: 140,\n    width: \"100%\",\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }\n  });\n};\nexport var WeeklyReportChart = function WeeklyReportChart() {\n  var chartSeries = [{\n    name: 'Weekly Sales',\n    data: weeklyReport.data\n  }];\n  var chartOptions = {\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#31316A'\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '20%',\n        borderRadius: 5,\n        radiusOnLastStackedBar: true,\n        horizontal: false,\n        distributed: false,\n        endindShape: 'rounded',\n        colors: {\n          backgroundBarColors: ['#F2F4F6', '#F2F4F6', '#F2F4F6', '#F2F4F6'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n    xaxis: {\n      categories: weeklyReport.labels,\n      crosshairs: {\n        width: 1\n      }\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter'\n      },\n      y: {\n        formatter: function formatter(val) {\n          return \"$ \" + val + \"k\";\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"bar\",\n    height: 260,\n    width: \"100%\",\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }\n  });\n};\nexport var BarChartHorizontal = function BarChartHorizontal(props) {\n  var title = props.title,\n      _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data;\n  var chartSeries = [{\n    name: title,\n    data: data.map(function (d) {\n      return d.value;\n    })\n  }];\n  var chartOptions = {\n    chart: {\n      foreColor: '#4B5563',\n      fontFamily: 'Inter'\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        distributed: false,\n        barHeight: '90%',\n        borderRadius: 10,\n        colors: {\n          backgroundBarColors: ['#fff'],\n          backgroundBarOpacity: .2,\n          backgroundBarRadius: 10\n        }\n      }\n    },\n    colors: ['#4D4AE8'],\n    dataLabels: {\n      enabled: true,\n      textAnchor: 'middle',\n      formatter: function formatter(val, opt) {\n        return opt.w.globals.labels[opt.dataPointIndex];\n      },\n      offsetY: -1,\n      dropShadow: {\n        enabled: false\n      },\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter',\n        fontWeight: '500'\n      }\n    },\n    grid: {\n      show: false,\n      borderColor: '#f2f2f2',\n      strokeDashArray: 1\n    },\n    legend: {\n      show: false\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter'\n      },\n      y: {\n        formatter: function formatter(val) {\n          return val + \"%\";\n        }\n      }\n    },\n    xaxis: {\n      categories: data.map(function (d) {\n        return d.label;\n      }),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500\n        },\n        offsetY: 5\n      },\n      axisBorder: {\n        color: '#ffffff'\n      },\n      axisTicks: {\n        color: '#ffffff',\n        offsetY: 5\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"bar\",\n    height: 500,\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 5\n    }\n  });\n};\nexport var BarChart = function BarChart(props) {\n  var _props$data2 = props.data,\n      data = _props$data2 === void 0 ? [] : _props$data2;\n  var chartSeries = data.map(function (d) {\n    return {\n      name: d.label,\n      data: d.values.map(function (v) {\n        return v.value;\n      })\n    };\n  });\n  var chartOptions = {\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#4B5563'\n    },\n    colors: data.map(function (d) {\n      return d.color;\n    }),\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '50%',\n        borderRadius: 5,\n        colors: {\n          backgroundBarColors: ['#fff'],\n          backgroundBarOpacity: .2,\n          backgroundBarRadius: 10\n        }\n      }\n    },\n    grid: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: 'Inter',\n      fontWeight: 500,\n      height: 40,\n      tooltipHoverFormatter: undefined,\n      offsetY: 10,\n      markers: {\n        width: 14,\n        height: 14,\n        strokeWidth: 1,\n        strokeColor: '#ffffff',\n        radius: 50\n      }\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: data.reduce(function (_, d) {\n        return _toConsumableArray(new Set(d.values.map(function (v) {\n          return v.date;\n        })));\n      }, []),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      },\n      axisBorder: {\n        color: '#EBE3EE'\n      },\n      axisTicks: {\n        color: '#f1f1f1'\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    fill: {\n      opacity: 1\n    },\n    responsive: [{\n      breakpoint: 1499,\n      options: {\n        chart: {\n          height: '400px'\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"bar\",\n    height: 400,\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 5\n    }\n  });\n};\nexport var PieChart = function PieChart(props) {\n  var _props$data3 = props.data,\n      data = _props$data3 === void 0 ? [] : _props$data3;\n  var chartSeries = data.map(function (d) {\n    return {\n      name: d.label,\n      data: d.values.map(function (v) {\n        return v.value;\n      })\n    };\n  });\n  var chartOptions = {\n    colors: data.map(function (d) {\n      return d.color;\n    }),\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#4B5563',\n      toolbar: {\n        show: true,\n        offsetX: 0,\n        offsetY: 0,\n        tools: {\n          download: false,\n          selection: false,\n          zoom: false,\n          zoomin: true,\n          zoomout: true,\n          pan: false,\n          reset: false | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n          customIcons: []\n        },\n        export: {\n          csv: {\n            filename: undefined,\n            columnDelimiter: ',',\n            headerCategory: 'category',\n            headerValue: 'value',\n            dateFormatter: function dateFormatter(timestamp) {\n              return new Date(timestamp).toDateString();\n            }\n          }\n        },\n        autoSelected: 'zoom'\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    grid: {\n      show: true,\n      borderColor: '#f2f2f2',\n      strokeDashArray: 1\n    },\n    xaxis: {\n      categories: data.reduce(function (_, d) {\n        return _toConsumableArray(new Set(d.values.map(function (v) {\n          return v.date;\n        })));\n      }, []),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      },\n      axisBorder: {\n        color: '#ffffff'\n      },\n      axisTicks: {\n        color: '#ffffff'\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: ['#4B5563'],\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      }\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: 'Inter',\n      fontWeight: 400,\n      height: 60,\n      tooltipHoverFormatter: undefined,\n      offsetY: 20,\n      markers: {\n        width: 14,\n        height: 14,\n        strokeWidth: 1,\n        strokeColor: '#fff',\n        radius: 50\n      }\n    },\n    responsive: [{\n      breakpoint: 768,\n      options: {\n        yaxis: {\n          show: false\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"pie\",\n    height: 400,\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 5\n    }\n  });\n};\nexport var DognutChart = function DognutChart(props) {\n  var _props$data4 = props.data,\n      data = _props$data4 === void 0 ? [] : _props$data4;\n  var chartSeries = data.map(function (d) {\n    return {\n      name: d.label,\n      data: d.values.map(function (v) {\n        return v.value;\n      })\n    };\n  });\n  var chartOptions = {\n    colors: data.map(function (d) {\n      return d.color;\n    }),\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#4B5563',\n      toolbar: {\n        show: true,\n        offsetX: 0,\n        offsetY: 0,\n        tools: {\n          download: false,\n          selection: false,\n          zoom: false,\n          zoomin: true,\n          zoomout: true,\n          pan: false,\n          reset: false | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n          customIcons: []\n        },\n        export: {\n          csv: {\n            filename: undefined,\n            columnDelimiter: ',',\n            headerCategory: 'category',\n            headerValue: 'value',\n            dateFormatter: function dateFormatter(timestamp) {\n              return new Date(timestamp).toDateString();\n            }\n          }\n        },\n        autoSelected: 'zoom'\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    grid: {\n      show: true,\n      borderColor: '#f2f2f2',\n      strokeDashArray: 1\n    },\n    xaxis: {\n      categories: data.reduce(function (_, d) {\n        return _toConsumableArray(new Set(d.values.map(function (v) {\n          return v.date;\n        })));\n      }, []),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      },\n      axisBorder: {\n        color: '#ffffff'\n      },\n      axisTicks: {\n        color: '#ffffff'\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: ['#4B5563'],\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      }\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: 'Inter',\n      fontWeight: 400,\n      height: 60,\n      tooltipHoverFormatter: undefined,\n      offsetY: 20,\n      markers: {\n        width: 14,\n        height: 14,\n        strokeWidth: 1,\n        strokeColor: '#fff',\n        radius: 50\n      }\n    },\n    responsive: [{\n      breakpoint: 768,\n      options: {\n        yaxis: {\n          show: false\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"pie\",\n    height: 400,\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 5\n    }\n  });\n};\nexport var LineGraphChart = function LineGraphChart(props) {\n  var _props$data5 = props.data,\n      data = _props$data5 === void 0 ? [] : _props$data5;\n  var chartSeries = data.map(function (d) {\n    return {\n      name: d.label,\n      data: d.values.map(function (v) {\n        return v.value;\n      })\n    };\n  });\n  var chartOptions = {\n    colors: data.map(function (d) {\n      return d.color;\n    }),\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#4B5563',\n      toolbar: {\n        show: true,\n        offsetX: 0,\n        offsetY: 0,\n        tools: {\n          download: false,\n          selection: false,\n          zoom: false,\n          zoomin: true,\n          zoomout: true,\n          pan: false,\n          reset: false | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n          customIcons: []\n        },\n        export: {\n          csv: {\n            filename: undefined,\n            columnDelimiter: ',',\n            headerCategory: 'category',\n            headerValue: 'value',\n            dateFormatter: function dateFormatter(timestamp) {\n              return new Date(timestamp).toDateString();\n            }\n          }\n        },\n        autoSelected: 'zoom'\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    grid: {\n      show: true,\n      borderColor: '#f2f2f2',\n      strokeDashArray: 1\n    },\n    xaxis: {\n      categories: data.reduce(function (_, d) {\n        return _toConsumableArray(new Set(d.values.map(function (v) {\n          return v.date;\n        })));\n      }, []),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      },\n      axisBorder: {\n        color: '#ffffff'\n      },\n      axisTicks: {\n        color: '#ffffff'\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: ['#4B5563'],\n          fontSize: '12px',\n          fontWeight: 500\n        }\n      }\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: 'Inter',\n      fontWeight: 400,\n      height: 60,\n      tooltipHoverFormatter: undefined,\n      offsetY: 20,\n      markers: {\n        width: 14,\n        height: 14,\n        strokeWidth: 1,\n        strokeColor: '#fff',\n        radius: 50\n      }\n    },\n    responsive: [{\n      breakpoint: 768,\n      options: {\n        yaxis: {\n          show: false\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/React.createElement(ApexChart, {\n    type: \"line\",\n    height: 420,\n    series: chartSeries,\n    options: chartOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/components/Charts.js"],"names":["React","ApexChart","dailySales","weeklySales","monthlySales","yearlySales","customers","revenue","users","weeklyReport","SalesValueChart","period","periodData","periodLabels","data","labels","chartSeries","name","chartOptions","chart","fontFamily","foreColor","toolbar","show","offsetX","offsetY","tools","download","selection","zoom","zoomin","zoomout","pan","reset","customIcons","export","csv","filename","undefined","columnDelimiter","headerCategory","headerValue","dateFormatter","timestamp","Date","toDateString","autoSelected","dataLabels","enabled","tooltip","style","fontSize","theme","monochrome","color","grid","borderColor","strokeDashArray","markers","size","strokeColors","hover","sizeOffset","xaxis","categories","fontWeight","axisBorder","axisTicks","yaxis","colors","responsive","breakpoint","options","CustomersChart","sparkline","fillSeriesColor","onDatasetHover","highlightDataSeries","RevenueChart","plotOptions","bar","columnWidth","borderRadius","radiusOnLastStackedBar","backgroundBarColors","backgroundBarRadius","crosshairs","width","y","formatter","val","UsersChart","WeeklyReportChart","horizontal","distributed","endindShape","BarChartHorizontal","props","title","map","d","value","barHeight","backgroundBarOpacity","textAnchor","opt","w","globals","dataPointIndex","dropShadow","legend","label","BarChart","values","v","height","tooltipHoverFormatter","strokeWidth","strokeColor","radius","stroke","reduce","_","Set","date","fill","opacity","PieChart","curve","DognutChart","LineGraphChart"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ApexChart from \"react-apexcharts\";\n\nimport { dailySales, weeklySales, monthlySales, yearlySales, customers, revenue, users, weeklyReport } from \"data/charts\";\n\nexport const SalesValueChart = ({ period = \"week\" }) => {\n  let periodData, periodLabels;\n\n  switch (period) {\n    case \"day\":\n      periodData = dailySales.data;\n      periodLabels = dailySales.labels;\n      break;\n    case \"month\":\n      periodData = monthlySales.data;\n      periodLabels = monthlySales.labels;\n      break;\n    case \"year\":\n      periodData = yearlySales.data;\n      periodLabels = yearlySales.labels;\n      break;\n    default:\n      periodData = weeklySales.data;\n      periodLabels = weeklySales.labels;\n      break;\n  }\n\n  const chartSeries = [\n    {\n      name: \"Sales\",\n      data: periodData,\n    }\n  ];\n\n  const chartOptions = {\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#262B40',\n      toolbar: {\n        show: true,\n        offsetX: 0,\n        offsetY: 0,\n        tools: {\n          download: false,\n          selection: false,\n          zoom: false,\n          zoomin: true,\n          zoomout: true,\n          pan: false,\n          reset: false | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n          customIcons: []\n        },\n        export: {\n          csv: {\n            filename: undefined,\n            columnDelimiter: ',',\n            headerCategory: 'category',\n            headerValue: 'value',\n            dateFormatter(timestamp) {\n              return new Date(timestamp).toDateString()\n            }\n          }\n        },\n        autoSelected: 'zoom'\n      },\n    },\n    dataLabels: {\n      enabled: false\n    },\n    tooltip: {\n      style: {\n        fontSize: '14px',\n        fontFamily: 'Inter',\n      },\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#17a5ce',\n      }\n    },\n    grid: {\n      show: true,\n      borderColor: '#61DAFB',\n      strokeDashArray: 1,\n    },\n    markers: {\n      size: 5,\n      strokeColors: '#17a5ce',\n      hover: {\n        size: undefined,\n        sizeOffset: 3\n      }\n    },\n    xaxis: {\n      categories: periodLabels,\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n      axisBorder: {\n        color: '#61DAFB',\n      },\n      axisTicks: {\n        color: '#61DAFB',\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: ['#262B40'],\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 768,\n        options: {\n          yaxis: {\n            show: false,\n          }\n        }\n      }\n    ]\n  };\n\n  return (\n    <ApexChart\n      type=\"area\"\n      height={420}\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const CustomersChart = () => {\n  const chartSeries = [{\n    name: 'Customers',\n    data: customers.data,\n  }];\n\n  const chartOptions = {\n    labels: customers.labels,\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#31316A',\n      }\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false,\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter',\n      },\n    },\n  };\n\n  return (\n    <ApexChart\n      type=\"area\"\n      height={140}\n      width=\"100%\"\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const RevenueChart = () => {\n  const chartSeries = [{\n    name: 'Revenue',\n    data: revenue.data,\n  }];\n\n  const chartOptions = {\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#31316A',\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '25%',\n        borderRadius: 5,\n        radiusOnLastStackedBar: true,\n        colors: {\n          backgroundBarColors: ['#F2F4F6', '#F2F4F6', '#F2F4F6', '#F2F4F6'],\n          backgroundBarRadius: 5,\n        },\n      }\n    },\n    xaxis: {\n      categories: revenue.labels,\n      crosshairs: {\n        width: 1\n      },\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false,\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter',\n      },\n      y: {\n        formatter: function (val) {\n          return \"$ \" + val + \"k\"\n        }\n      }\n    },\n  };\n\n  return (\n    <ApexChart\n      type=\"bar\"\n      height={140}\n      width=\"100%\"\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const UsersChart = () => {\n  const chartSeries = [{\n    name: 'Users',\n    data: users.data,\n  }];\n\n  const chartOptions = {\n    labels: users.labels,\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#31316A',\n      }\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false,\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter',\n      },\n    },\n  };\n\n  return (\n    <ApexChart\n      type=\"area\"\n      height={140}\n      width=\"100%\"\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const WeeklyReportChart = () => {\n  const chartSeries = [{\n    name: 'Weekly Sales',\n    data: weeklyReport.data,\n  }];\n\n  const chartOptions = {\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: '#31316A',\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '20%',\n        borderRadius: 5,\n        radiusOnLastStackedBar: true,\n        horizontal: false,\n        distributed: false,\n        endindShape: 'rounded',\n        colors: {\n          backgroundBarColors: ['#F2F4F6', '#F2F4F6', '#F2F4F6', '#F2F4F6'],\n          backgroundBarRadius: 5,\n        },\n      }\n    },\n    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n    xaxis: {\n      categories: weeklyReport.labels,\n      crosshairs: {\n        width: 1\n      },\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false,\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter',\n      },\n      y: {\n        formatter: function (val) {\n          return \"$ \" + val + \"k\"\n        }\n      }\n    },\n  };\n\n  return (\n    <ApexChart\n      type=\"bar\"\n      height={260}\n      width=\"100%\"\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const BarChartHorizontal = (props) => {\n  const { title, data = [] } = props;\n\n  const chartSeries = [{\n    name: title,\n    data: data.map(d => d.value)\n  }];\n\n  const chartOptions = {\n    chart: {\n      foreColor: '#4B5563',\n      fontFamily: 'Inter',\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        distributed: false,\n        barHeight: '90%',\n        borderRadius: 10,\n        colors: {\n          backgroundBarColors: ['#fff'],\n          backgroundBarOpacity: .2,\n          backgroundBarRadius: 10,\n        },\n      }\n    },\n    colors: ['#4D4AE8'],\n    dataLabels: {\n      enabled: true,\n      textAnchor: 'middle',\n      formatter: function (val, opt) {\n        return opt.w.globals.labels[opt.dataPointIndex]\n      },\n      offsetY: -1,\n      dropShadow: {\n        enabled: false,\n      },\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter',\n        fontWeight: '500',\n      }\n    },\n    grid: {\n      show: false,\n      borderColor: '#f2f2f2',\n      strokeDashArray: 1,\n    },\n    legend: {\n      show: false,\n    },\n    yaxis: {\n      labels: {\n        show: false\n      },\n    },\n    tooltip: {\n      fillSeriesColor: false,\n      onDatasetHover: {\n        highlightDataSeries: false,\n      },\n      theme: 'light',\n      style: {\n        fontSize: '12px',\n        fontFamily: 'Inter',\n      },\n      y: {\n        formatter: function (val) {\n          return val + \"%\"\n        }\n      },\n    },\n    xaxis: {\n      categories: data.map(d => d.label),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n        offsetY: 5\n      },\n      axisBorder: {\n        color: '#ffffff',\n      },\n      axisTicks: {\n        color: '#ffffff',\n        offsetY: 5\n      },\n    }\n  };\n\n  return (\n    <ApexChart\n      type=\"bar\"\n      height={500}\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const BarChart = (props) => {\n  const { data = [] } = props;\n\n  const chartSeries = data.map(d => ({\n    name: d.label,\n    data: d.values.map(v => v.value),\n  }));\n\n  const chartOptions = {\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#4B5563',\n    },\n    colors: data.map(d => d.color),\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '50%',\n        borderRadius: 5,\n        colors: {\n          backgroundBarColors: ['#fff'],\n          backgroundBarOpacity: .2,\n          backgroundBarRadius: 10,\n        },\n      },\n    },\n    grid: {\n      show: false,\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: 'Inter',\n      fontWeight: 500,\n      height: 40,\n      tooltipHoverFormatter: undefined,\n      offsetY: 10,\n      markers: {\n        width: 14,\n        height: 14,\n        strokeWidth: 1,\n        strokeColor: '#ffffff',\n        radius: 50,\n      },\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: data.reduce((_, d) => [...new Set(d.values.map(v => v.date))], []),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n      axisBorder: {\n        color: '#EBE3EE',\n      },\n      axisTicks: {\n        color: '#f1f1f1',\n      }\n    },\n    yaxis: {\n      show: false,\n    },\n    fill: {\n      opacity: 1\n    },\n    responsive: [{\n      breakpoint: 1499,\n      options: {\n        chart: {\n          height: '400px',\n        },\n      },\n    }]\n  };\n\n  return (\n    <ApexChart\n      type=\"bar\"\n      height={400}\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const PieChart = (props) => {\n  const { data = [] } = props;\n\n  const chartSeries = data.map(d => ({\n    name: d.label,\n    data: d.values.map(v => v.value),\n  }));\n\n  const chartOptions = {\n    colors: data.map(d => d.color),\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#4B5563',\n      toolbar: {\n        show: true,\n        offsetX: 0,\n        offsetY: 0,\n        tools: {\n          download: false,\n          selection: false,\n          zoom: false,\n          zoomin: true,\n          zoomout: true,\n          pan: false,\n          reset: false | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n          customIcons: []\n        },\n        export: {\n          csv: {\n            filename: undefined,\n            columnDelimiter: ',',\n            headerCategory: 'category',\n            headerValue: 'value',\n            dateFormatter(timestamp) {\n              return new Date(timestamp).toDateString()\n            }\n          }\n        },\n        autoSelected: 'zoom'\n      },\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    grid: {\n      show: true,\n      borderColor: '#f2f2f2',\n      strokeDashArray: 1,\n    },\n    xaxis: {\n      categories: data.reduce((_, d) => [...new Set(d.values.map(v => v.date))], []),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n      axisBorder: {\n        color: '#ffffff',\n      },\n      axisTicks: {\n        color: '#ffffff',\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: ['#4B5563'],\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: 'Inter',\n      fontWeight: 400,\n      height: 60,\n      tooltipHoverFormatter: undefined,\n      offsetY: 20,\n      markers: {\n        width: 14,\n        height: 14,\n        strokeWidth: 1,\n        strokeColor: '#fff',\n        radius: 50,\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 768,\n        options: {\n          yaxis: {\n            show: false,\n          }\n        }\n      }\n    ]\n  };\n\n  return (\n    <ApexChart\n      type=\"pie\"\n      height={400}\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const DognutChart = (props) => {\n  const { data = [] } = props;\n\n  const chartSeries = data.map(d => ({\n    name: d.label,\n    data: d.values.map(v => v.value),\n  }));\n\n  const chartOptions = {\n    colors: data.map(d => d.color),\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#4B5563',\n      toolbar: {\n        show: true,\n        offsetX: 0,\n        offsetY: 0,\n        tools: {\n          download: false,\n          selection: false,\n          zoom: false,\n          zoomin: true,\n          zoomout: true,\n          pan: false,\n          reset: false | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n          customIcons: []\n        },\n        export: {\n          csv: {\n            filename: undefined,\n            columnDelimiter: ',',\n            headerCategory: 'category',\n            headerValue: 'value',\n            dateFormatter(timestamp) {\n              return new Date(timestamp).toDateString()\n            }\n          }\n        },\n        autoSelected: 'zoom'\n      },\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    grid: {\n      show: true,\n      borderColor: '#f2f2f2',\n      strokeDashArray: 1,\n    },\n    xaxis: {\n      categories: data.reduce((_, d) => [...new Set(d.values.map(v => v.date))], []),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n      axisBorder: {\n        color: '#ffffff',\n      },\n      axisTicks: {\n        color: '#ffffff',\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: ['#4B5563'],\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: 'Inter',\n      fontWeight: 400,\n      height: 60,\n      tooltipHoverFormatter: undefined,\n      offsetY: 20,\n      markers: {\n        width: 14,\n        height: 14,\n        strokeWidth: 1,\n        strokeColor: '#fff',\n        radius: 50,\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 768,\n        options: {\n          yaxis: {\n            show: false,\n          }\n        }\n      }\n    ]\n  };\n\n  return (\n    <ApexChart\n      type=\"pie\"\n      height={400}\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n\nexport const LineGraphChart = (props) => {\n  const { data = [] } = props;\n\n  const chartSeries = data.map(d => ({\n    name: d.label,\n    data: d.values.map(v => v.value),\n  }));\n\n  const chartOptions = {\n    colors: data.map(d => d.color),\n    chart: {\n      fontFamily: 'Inter',\n      foreColor: '#4B5563',\n      toolbar: {\n        show: true,\n        offsetX: 0,\n        offsetY: 0,\n        tools: {\n          download: false,\n          selection: false,\n          zoom: false,\n          zoomin: true,\n          zoomout: true,\n          pan: false,\n          reset: false | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n          customIcons: []\n        },\n        export: {\n          csv: {\n            filename: undefined,\n            columnDelimiter: ',',\n            headerCategory: 'category',\n            headerValue: 'value',\n            dateFormatter(timestamp) {\n              return new Date(timestamp).toDateString()\n            }\n          }\n        },\n        autoSelected: 'zoom'\n      },\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    grid: {\n      show: true,\n      borderColor: '#f2f2f2',\n      strokeDashArray: 1,\n    },\n    xaxis: {\n      categories: data.reduce((_, d) => [...new Set(d.values.map(v => v.date))], []),\n      labels: {\n        style: {\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n      axisBorder: {\n        color: '#ffffff',\n      },\n      axisTicks: {\n        color: '#ffffff',\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: ['#4B5563'],\n          fontSize: '12px',\n          fontWeight: 500,\n        },\n      },\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: 'Inter',\n      fontWeight: 400,\n      height: 60,\n      tooltipHoverFormatter: undefined,\n      offsetY: 20,\n      markers: {\n        width: 14,\n        height: 14,\n        strokeWidth: 1,\n        strokeColor: '#fff',\n        radius: 50,\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 768,\n        options: {\n          yaxis: {\n            show: false,\n          }\n        }\n      }\n    ]\n  };\n\n  return (\n    <ApexChart\n      type=\"line\"\n      height={420}\n      series={chartSeries}\n      options={chartOptions}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}