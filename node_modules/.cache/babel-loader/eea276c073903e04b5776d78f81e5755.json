{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/plugins/SweetAlert.js\";\n\nimport React from 'react';\nimport { Row, Col, Card, Button, Container } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport Documentation from \"components/Documentation\";\nexport default (function () {\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"p-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    id: \"sweet-alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, \"SweetAlert2\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"fs-5 fw-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }\n  }, \"Use this premium notifications plugin to show modal prompts to your users.\"), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Example\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }, \"Here\\u2019s a basic example of an informational modal that is being prompted when the following button is clicked:\"),\n    imports: \"import { Button } from 'react-bootstrap';\\nimport Swal from 'sweetalert2';\\nimport withReactContent from 'sweetalert2-react-content';\",\n    scope: {\n      Button: Button,\n      Swal: Swal,\n      withReactContent: withReactContent\n    },\n    example: \"const SwalWithBootstrapButtons = withReactContent(Swal.mixin({\\n  customClass: {\\n    confirmButton: 'btn btn-primary me-3',\\n    cancelButton: 'btn btn-gray'\\n  },\\n  buttonsStyling: false\\n}));\\n                \\nconst onClick = async function() {\\n  await SwalWithBootstrapButtons.fire(\\n    'Basic alert',\\n    'You clicked the button!'\\n  );\\n}\\n\\nrender(\\n  <Button variant=\\\"primary\\\" onClick={onClick}>\\n    Basic alert\\n  </Button>\\n);\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Alert type\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, \"There are 5 built-in icons for the modal of SweetAlert2 and each will show a corresponding icon animation: \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 128\n      }\n    }, \"warning\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 150\n      }\n    }, \"error\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 170\n      }\n    }, \"success\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 192\n      }\n    }, \"info\"), \", and \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 215\n      }\n    }, \"question\"), \". It can either be put in the array under the key \\u201Cicon\\u201D or passed as the third parameter of the function.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, \"Here\\u2019s an example when the icon type of the alert is \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 75\n      }\n    }, \"error\"), \":\")),\n    imports: \"import { Button } from 'react-bootstrap';\\nimport Swal from 'sweetalert2';\\nimport withReactContent from 'sweetalert2-react-content';\",\n    scope: {\n      Button: Button,\n      Swal: Swal,\n      withReactContent: withReactContent\n    },\n    example: \"const SwalWithBootstrapButtons = withReactContent(Swal.mixin({\\n  customClass: {\\n    confirmButton: 'btn btn-primary me-3',\\n    cancelButton: 'btn btn-gray'\\n  },\\n  buttonsStyling: false\\n}));\\n                \\nconst onClick = async function() {\\n  await SwalWithBootstrapButtons.fire({\\n    icon: 'error',\\n    title: 'Oops...',\\n    text: 'Something went wrong!',\\n    footer: '<a href=\\\"#do-something\\\">Why do I have this issue?</a>'\\n  });\\n}\\n\\nrender(\\n  <Button variant=\\\"danger\\\" onClick={onClick}>\\n    Error alert\\n  </Button>\\n);\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }))))));\n});","map":{"version":3,"sources":["/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/plugins/SweetAlert.js"],"names":["React","Row","Col","Card","Button","Container","Swal","withReactContent","Documentation"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,iBAAlD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAEA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA,gBAAe,YAAM;AACnB,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAFF,eAME,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4HAHJ;AAKE,IAAA,OAAO,yIALT;AAQE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAM,EAANA,MAAF;AAAUE,MAAAA,IAAI,EAAJA,IAAV;AAAgBC,MAAAA,gBAAgB,EAAhBA;AAAhB,KART;AASE,IAAA,OAAO,gcATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAqCE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,WAAW,eAAE,uDACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIAC6G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD7G,qBACmI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADnI,qBACuJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADvJ,qBAC6K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7K,yBACoM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADpM,yHADW,eAIX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAxD,MAJW,CAFf;AAQE,IAAA,OAAO,yIART;AAWE,IAAA,KAAK,EAAE;AAAEH,MAAAA,MAAM,EAANA,MAAF;AAAUE,MAAAA,IAAI,EAAJA,IAAV;AAAgBC,MAAAA,gBAAgB,EAAhBA;AAAhB,KAXT;AAYE,IAAA,OAAO,oiBAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,CADF,CADF,CADF,CADF,CADF;AAoFD,CArFD","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Button, Container } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nimport Documentation from \"components/Documentation\";\n\nexport default () => {\n  return (\n    <Container className=\"px-0\">\n      <Row>\n        <Col xs={12} className=\"p-3\">\n          <Card>\n            <Card.Body>\n              <h1 className=\"h2\" id=\"sweet-alert\">SweetAlert2</h1>\n              <p className=\"fs-5 fw-light\">\n                Use this premium notifications plugin to show modal prompts to your users.\n              </p>\n\n              <Documentation\n                title=\"Example\"\n                description={\n                  <p>Here’s a basic example of an informational modal that is being prompted when the following button is clicked:</p>\n                }\n                imports={`import { Button } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';`}\n                scope={{ Button, Swal, withReactContent }}\n                example={`const SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n                \nconst onClick = async function() {\n  await SwalWithBootstrapButtons.fire(\n    'Basic alert',\n    'You clicked the button!'\n  );\n}\n\nrender(\n  <Button variant=\"primary\" onClick={onClick}>\n    Basic alert\n  </Button>\n);`}\n              />\n\n              <Documentation\n                title=\"Alert type\"\n                description={<>\n                  <p>\n                    There are 5 built-in icons for the modal of SweetAlert2 and each will show a corresponding icon animation: <code>warning</code>, <code>error</code>, <code>success</code>, <code>info</code>, and <code>question</code>. It can either be put in the array under the key “icon” or passed as the third parameter of the function.\n                  </p>\n                  <p>Here’s an example when the icon type of the alert is <code>error</code>:</p>\n                </>}\n                imports={`import { Button } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';`}\n                scope={{ Button, Swal, withReactContent }}\n                example={`const SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n                \nconst onClick = async function() {\n  await SwalWithBootstrapButtons.fire({\n    icon: 'error',\n    title: 'Oops...',\n    text: 'Something went wrong!',\n    footer: '<a href=\"#do-something\">Why do I have this issue?</a>'\n  });\n}\n\nrender(\n  <Button variant=\"danger\" onClick={onClick}>\n    Error alert\n  </Button>\n);`}\n              />\n\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}