{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/components/Progress.js\";\n\nimport React from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport Documentation from \"components/Documentation\";\nimport Progress from \"components/Progress\";\nexport default (function () {\n  return /*#__PURE__*/React.createElement(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-block mb-4 mb-md-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Progress\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, \"Use progress bars to indicate percentage based components.\"))), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Example\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }\n    }, \"<Progress>\"), \" component to show progress bars or loaders for your app. You can set the value of the bar using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 156\n      }\n    }, \"value\"), \" attribute. You can also change the appearance using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 231\n      }\n    }, \"variant=\\\"*\\\"\"), \" attributes using the default Bootstrap color classes, such as \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 318\n      }\n    }, \"primary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 340\n      }\n    }, \"secondary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 364\n      }\n    }, \"danger\"), \" and so on.\"),\n    scope: {\n      Progress: Progress\n    },\n    imports: \"import Progress from \\\"components/Progress\\\";\",\n    example: \"<Progress variant=\\\"primary\\\" label=\\\"Primary color\\\" value={25} />\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Color variations\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"To update the appearance of the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 46\n      }\n    }, \"<Progress>\"), \" component you can use the following classes for the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 132\n      }\n    }, \"variant\"), \" attribute. You can also add a label text using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 204\n      }\n    }, \"label=\\\"lorem ipsum\\\"\"), \" attribute.\"),\n    scope: {\n      Progress: Progress\n    },\n    imports: \"import Progress from \\\"components/Progress\\\";\",\n    example: \"<React.Fragment>\\n  <Progress variant=\\\"secondary\\\" label=\\\"Secondary color\\\" />\\n  <Progress variant=\\\"tertiary\\\" label=\\\"Tertiary color\\\" />\\n  <Progress variant=\\\"gray-800\\\" label=\\\"Dark color\\\" />\\n  <Progress variant=\\\"success\\\" label=\\\"Success color\\\" />\\n  <Progress variant=\\\"info\\\" label=\\\"Info color\\\" />\\n  <Progress variant=\\\"danger\\\" label=\\\"Danger color\\\" />\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Example with tooltip labels\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"If you'd like the labels to be shown as tooltips, all you need to do is add the attribute \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 104\n      }\n    }, \"type=\\\"tooltip\\\"\"), \" to the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 139\n      }\n    }, \"<Progress>\"), \" component.\"),\n    scope: {\n      Progress: Progress\n    },\n    imports: \"import Progress from \\\"components/Progress\\\";\",\n    example: \"<React.Fragment>\\n  <Progress variant=\\\"primary\\\" label=\\\"Angular\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"secondary\\\" label=\\\"Wordpress\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"tertiary\\\" label=\\\"Laravel\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"success\\\" label=\\\"Bootstrap\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"info\\\" label=\\\"Angular\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"danger\\\" label=\\\"Javascript\\\" type=\\\"tooltip\\\" />\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Sizing\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"You can also use one of the four available sizes for the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 71\n      }\n    }, \"<Progress>\"), \" updating the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 118\n      }\n    }, \"size=\\\"*\\\"\"), \" attribute.\"),\n    scope: {\n      Progress: Progress\n    },\n    imports: \"import Progress from \\\"components/Progress\\\";\",\n    example: \"<React.Fragment>\\n  <Progress variant=\\\"primary\\\" label=\\\"XL Progress Bar\\\" size=\\\"xl\\\" />\\n  <Progress variant=\\\"secondary\\\" label=\\\"LG Progress Bar\\\" size=\\\"lg\\\" />\\n  <Progress variant=\\\"tertiary\\\" label=\\\"MD Progress Bar\\\" size=\\\"md\\\" />\\n  <Progress variant=\\\"info\\\" label=\\\"SM Progress Bar\\\" size=\\\"sm\\\" />\\n</React.Fragment>\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/components/Progress.js"],"names":["React","Col","Row","Container","Documentation","Progress"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\n\nimport Documentation from \"components/Documentation\";\nimport Progress from \"components/Progress\";\n\nexport default () => (\n  <article>\n    <Container className=\"px-0\">\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col className=\"d-block mb-4 mb-md-0\">\n          <h1 className=\"h2\">Progress</h1>\n          <p className=\"mb-0\">\n            Use progress bars to indicate percentage based components.\n          </p>\n        </Col>\n      </Row>\n\n      <Documentation\n        title=\"Example\"\n        description={\n          <p>Use the <code>&#x3C;Progress&#x3E;</code> component to show progress bars or loaders for your app. You can set the value of the bar using the <code>value</code> attribute. You can also change the appearance using the <code>variant=\"*\"</code> attributes using the default Bootstrap color classes, such as <code>primary</code>, <code>secondary</code>, <code>danger</code> and so on.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"components/Progress\";`}\n        example={`<Progress variant=\"primary\" label=\"Primary color\" value={25} />`}\n      />\n\n      <Documentation\n        title=\"Color variations\"\n        description={\n          <p>To update the appearance of the <code>&#x3C;Progress&#x3E;</code> component you can use the following classes for the <code>variant</code> attribute. You can also add a label text using the <code>label=\"lorem ipsum\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"gray-800\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Example with tooltip labels\"\n        description={\n          <p>If you'd like the labels to be shown as tooltips, all you need to do is add the attribute <code>type=\"tooltip\"</code> to the <code>&#x3C;Progress&#x3E;</code> component.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"Angular\" type=\"tooltip\" />\n  <Progress variant=\"secondary\" label=\"Wordpress\" type=\"tooltip\" />\n  <Progress variant=\"tertiary\" label=\"Laravel\" type=\"tooltip\" />\n  <Progress variant=\"success\" label=\"Bootstrap\" type=\"tooltip\" />\n  <Progress variant=\"info\" label=\"Angular\" type=\"tooltip\" />\n  <Progress variant=\"danger\" label=\"Javascript\" type=\"tooltip\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Sizing\"\n        description={\n          <p>You can also use one of the four available sizes for the <code>&#x3C;Progress&#x3E;</code> updating the <code>size=\"*\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`}\n      />\n    </Container>\n  </article>\n);\n"]},"metadata":{},"sourceType":"module"}