{"ast":null,"code":"import _regeneratorRuntime from \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/Tasks.js\",\n    _this = this;\n\nimport React, { useState } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Col, Row, Form, Button, Tooltip, Dropdown, InputGroup, ButtonGroup, OverlayTrigger } from 'react-bootstrap';\nimport { TaskCardWidget } from \"components/Widgets\";\nimport TASKS_DATA from \"data/tasks\";\nimport { ArchiveIcon, CheckCircleIcon, ChevronLeftIcon, ChevronRightIcon, CloudUploadIcon, FireIcon, PlusIcon, ShieldCheckIcon, TrashIcon, ViewGridAddIcon } from \"@heroicons/react/solid\";\nvar ArchiveIconHtml = ReactDOMServer.renderToString( /*#__PURE__*/React.createElement(ArchiveIcon, {\n  className: \"h-50 w-auto\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}));\nvar SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\nexport default (function () {\n  var _useState = useState(TASKS_DATA.map(function (t) {\n    return _objectSpread(_objectSpread({}, t), {}, {\n      show: true\n    });\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchValue = _useState4[0],\n      setSearchValue = _useState4[1];\n\n  var selectedTasksIds = tasks.filter(function (m) {\n    return m.isSelected;\n  }).map(function (m) {\n    return m.id;\n  });\n  var disableMenu = selectedTasksIds.length === 0;\n\n  var toggleDoneStatus = function toggleDoneStatus(id) {\n    setTasks(tasks.map(function (t) {\n      return t.id === id ? _objectSpread(_objectSpread({}, t), {}, {\n        statusKey: t.statusKey === \"done\" ? \"inProgress\" : \"done\"\n      }) : t;\n    }));\n  };\n\n  var selectTask = function selectTask(id) {\n    var newTasks = tasks.map(function (t) {\n      var isSelected = t.id === id ? !t.isSelected : t.isSelected;\n      return _objectSpread(_objectSpread({}, t), {}, {\n        isSelected: isSelected\n      });\n    });\n    setTasks(newTasks);\n  };\n\n  var markSelectedTasksAsDone = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newTasks;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newTasks = tasks.map(function (t) {\n                return selectedTasksIds.includes(t.id) ? _objectSpread(_objectSpread({}, t), {}, {\n                  \"statusKey\": \"done\"\n                }) : t;\n              });\n              setTasks(newTasks);\n              _context.next = 4;\n              return SwalWithBootstrapButtons.fire(\"Successfully marked as done.\", \"\", 'success');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function markSelectedTasksAsDone() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var deleteTasks = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ids) {\n      var tasksNr, textMessage, result, newTasks, confirmMessage;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tasksNr = ids.length;\n              textMessage = tasksNr === 1 ? \"Are you sure do you want to delete this task?\" : \"Are you sure do you want to delete these \".concat(tasksNr, \" tasks?\");\n              _context2.next = 4;\n              return SwalWithBootstrapButtons.fire({\n                icon: \"error\",\n                title: \"Confirm deletion\",\n                text: textMessage,\n                showCancelButton: true,\n                confirmButtonText: \"Yes\",\n                cancelButtonText: \"Cancel\"\n              });\n\n            case 4:\n              result = _context2.sent;\n\n              if (!result.isConfirmed) {\n                _context2.next = 11;\n                break;\n              }\n\n              newTasks = tasks.filter(function (t) {\n                return !ids.includes(t.id);\n              });\n              confirmMessage = tasksNr === 1 ? \"The task has been deleted.\" : \"The tasks have been deleted.\";\n              setTasks(newTasks);\n              _context2.next = 11;\n              return SwalWithBootstrapButtons.fire('Deleted', confirmMessage, 'success');\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTasks(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var archiveSelectedTasks = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var tasksNr, textMessage, result, newTasks, confirmMessage;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              tasksNr = selectedTasksIds.length;\n              textMessage = tasksNr === 1 ? \"Are you sure do you want to archive this task?\" : \"Are you sure do you want to archive these \".concat(tasksNr, \" tasks?\");\n              _context3.next = 4;\n              return SwalWithBootstrapButtons.fire({\n                icon: \"question\",\n                iconHtml: ArchiveIconHtml,\n                title: \"Confirm archivation\",\n                text: textMessage,\n                showCancelButton: true,\n                confirmButtonText: \"Yes\",\n                cancelButtonText: \"Cancel\"\n              });\n\n            case 4:\n              result = _context3.sent;\n\n              if (!result.isConfirmed) {\n                _context3.next = 11;\n                break;\n              }\n\n              newTasks = tasks.filter(function (f) {\n                return !selectedTasksIds.includes(f.id);\n              });\n              confirmMessage = tasksNr === 1 ? \"The task has been archived.\" : \"The tasks have been archived.\";\n              setTasks(newTasks);\n              _context3.next = 11;\n              return SwalWithBootstrapButtons.fire('Archived', confirmMessage, 'success');\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function archiveSelectedTasks() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var changeSearchValue = function changeSearchValue(e) {\n    var newSearchValue = e.target.value;\n    var newTasks = tasks.map(function (t) {\n      var title = t.title.toLowerCase();\n      var description = t.description.toLowerCase();\n      var shouldShow = title.includes(newSearchValue) || description.includes(newSearchValue) || \"\".concat(t.time).includes(newSearchValue);\n      return _objectSpread(_objectSpread({}, t), {}, {\n        show: shouldShow,\n        isSelected: shouldShow && t.isSelected ? false : t.isSelected\n      });\n    });\n    setTasks(newTasks);\n    setSearchValue(newSearchValue);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"d-flex justify-content-between ps-0 mb-4 mb-lg-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"me-lg-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    as: Button,\n    variant: \"secondary\",\n    className: \"d-inline-flex align-items-center me-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PlusIcon, {\n    className: \"icon icon-xs me-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), \" New Task\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"dashboard-dropdown dropdown-menu-start mt-2 py-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    className: \"d-flex align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PlusIcon, {\n    className: \"icon icon-xs text-gray-400 me-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }), \" Add Task\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    className: \"d-flex align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ViewGridAddIcon, {\n    className: \"icon icon-xs text-gray-400 me-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }), \" Add Widget\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    className: \"d-flex align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloudUploadIcon, {\n    className: \"icon icon-xs text-gray-400 me-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }), \" Upload Files\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    className: \"d-flex align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShieldCheckIcon, {\n    className: \"icon icon-xs text-gray-400 me-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }), \" Preview Security\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n    as: \"div\",\n    className: \"my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    className: \"d-flex align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FireIcon, {\n    className: \"icon icon-xs text-danger me-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }), \" Upgrade to Pro\")))), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n    placement: \"bottom\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      className: \"m-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 24\n      }\n    }, \"Archive\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"gray-800\",\n    disabled: disableMenu,\n    onClick: archiveSelectedTasks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ArchiveIcon, {\n    className: \"icon icon-xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n    placement: \"bottom\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      className: \"m-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 24\n      }\n    }, \"Mark as done\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"gray-800\",\n    disabled: disableMenu,\n    onClick: markSelectedTasksAsDone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleIcon, {\n    className: \"icon icon-xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n    placement: \"bottom\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      className: \"m-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 24\n      }\n    }, \"Delete\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"gray-800\",\n    disabled: disableMenu,\n    onClick: function onClick() {\n      return deleteTasks(selectedTasksIds);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    className: \"icon icon-xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"d-flex justify-content-lg-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Search Tasks Here\",\n    className: \"w-100 fmxw-300\",\n    value: searchValue,\n    onChange: changeSearchValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-wrapper border bg-white border-light shadow-sm py-1 rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, tasks.filter(function (t) {\n    return t.show;\n  }).map(function (t) {\n    return /*#__PURE__*/React.createElement(TaskCardWidget, Object.assign({}, t, {\n      key: \"task-\".concat(t.id),\n      selectTask: selectTask,\n      toggleDoneStatus: toggleDoneStatus,\n      deleteTask: function deleteTask(id) {\n        return deleteTasks([id]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex align-items-center p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 7,\n    className: \"mt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"Showing 1 - \", tasks.length, \" of 289\"), /*#__PURE__*/React.createElement(Col, {\n    xs: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    className: \"float-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    className: \"icon icon-xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    className: \"icon icon-xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  })))))));\n});","map":{"version":3,"sources":["/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/Tasks.js"],"names":["React","useState","ReactDOMServer","Swal","withReactContent","Col","Row","Form","Button","Tooltip","Dropdown","InputGroup","ButtonGroup","OverlayTrigger","TaskCardWidget","TASKS_DATA","ArchiveIcon","CheckCircleIcon","ChevronLeftIcon","ChevronRightIcon","CloudUploadIcon","FireIcon","PlusIcon","ShieldCheckIcon","TrashIcon","ViewGridAddIcon","ArchiveIconHtml","renderToString","SwalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","map","t","show","tasks","setTasks","searchValue","setSearchValue","selectedTasksIds","filter","m","isSelected","id","disableMenu","length","toggleDoneStatus","statusKey","selectTask","newTasks","markSelectedTasksAsDone","includes","fire","deleteTasks","ids","tasksNr","textMessage","icon","title","text","showCancelButton","confirmButtonText","cancelButtonText","result","isConfirmed","confirmMessage","archiveSelectedTasks","iconHtml","f","changeSearchValue","e","newSearchValue","target","value","toLowerCase","description","shouldShow","time"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Col, Row, Form, Button, Tooltip, Dropdown, InputGroup, ButtonGroup, OverlayTrigger } from 'react-bootstrap';\n\nimport { TaskCardWidget } from \"components/Widgets\";\nimport TASKS_DATA from \"data/tasks\";\nimport { ArchiveIcon, CheckCircleIcon, ChevronLeftIcon, ChevronRightIcon, CloudUploadIcon, FireIcon, PlusIcon, ShieldCheckIcon, TrashIcon, ViewGridAddIcon } from \"@heroicons/react/solid\";\n\nconst ArchiveIconHtml = ReactDOMServer.renderToString(\n  <ArchiveIcon className=\"h-50 w-auto\" />\n);\n\nconst SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n\n\nexport default () => {\n  const [tasks, setTasks] = useState(TASKS_DATA.map(t => ({ ...t, show: true })));\n  const [searchValue, setSearchValue] = useState(\"\");\n  const selectedTasksIds = tasks.filter(m => m.isSelected).map(m => m.id);\n  const disableMenu = selectedTasksIds.length === 0;\n\n  const toggleDoneStatus = (id) => {\n    setTasks(tasks.map(t => t.id === id ? { ...t, statusKey: t.statusKey === \"done\" ? \"inProgress\" : \"done\" } : t));\n  };\n\n  const selectTask = (id) => {\n    const newTasks = tasks.map(t => {\n      const isSelected = t.id === id ? !t.isSelected : t.isSelected;\n      return { ...t, isSelected };\n    });\n\n    setTasks(newTasks);\n  };\n\n  const markSelectedTasksAsDone = async () => {\n    const newTasks = tasks.map(t => selectedTasksIds.includes(t.id) ? { ...t, \"statusKey\": \"done\" } : t);\n    setTasks(newTasks);\n\n    await SwalWithBootstrapButtons.fire(\"Successfully marked as done.\", \"\", 'success');\n  };\n\n  const deleteTasks = async (ids) => {\n    const tasksNr = ids.length;\n    const textMessage = tasksNr === 1\n      ? \"Are you sure do you want to delete this task?\"\n      : `Are you sure do you want to delete these ${tasksNr} tasks?`;\n\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"error\",\n      title: \"Confirm deletion\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newTasks = tasks.filter(t => !ids.includes(t.id));\n      const confirmMessage = tasksNr === 1 ? \"The task has been deleted.\" : \"The tasks have been deleted.\";\n\n      setTasks(newTasks);\n      await SwalWithBootstrapButtons.fire('Deleted', confirmMessage, 'success');\n    }\n  };\n\n  const archiveSelectedTasks = async () => {\n    const tasksNr = selectedTasksIds.length;\n    const textMessage = tasksNr === 1\n      ? \"Are you sure do you want to archive this task?\"\n      : `Are you sure do you want to archive these ${tasksNr} tasks?`;\n\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"question\",\n      iconHtml: ArchiveIconHtml,\n      title: \"Confirm archivation\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newTasks = tasks.filter(f => !selectedTasksIds.includes(f.id));\n      const confirmMessage = tasksNr === 1 ? \"The task has been archived.\" : \"The tasks have been archived.\";\n\n      setTasks(newTasks);\n      await SwalWithBootstrapButtons.fire('Archived', confirmMessage, 'success');\n    }\n  };\n\n  const changeSearchValue = (e) => {\n    const newSearchValue = e.target.value;\n    const newTasks = tasks.map(t => {\n      const title = t.title.toLowerCase();\n      const description = t.description.toLowerCase();\n\n      const shouldShow = title.includes(newSearchValue)\n        || description.includes(newSearchValue)\n        || `${t.time}`.includes(newSearchValue);\n\n      return ({ ...t, show: shouldShow, isSelected: shouldShow && t.isSelected ? false : t.isSelected });\n    });\n\n    setTasks(newTasks);\n    setSearchValue(newSearchValue);\n  }\n\n  return (\n    <>\n      <div className=\"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col xs=\"auto\" className=\"d-flex justify-content-between ps-0 mb-4 mb-lg-0\">\n          <div className=\"me-lg-3\">\n            <Dropdown>\n              <Dropdown.Toggle as={Button} variant=\"secondary\" className=\"d-inline-flex align-items-center me-2\">\n                <PlusIcon className=\"icon icon-xs me-2\" /> New Task\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"dashboard-dropdown dropdown-menu-start mt-2 py-1\">\n                <Dropdown.Item className=\"d-flex align-items-center\">\n                  <PlusIcon className=\"icon icon-xs text-gray-400 me-2\" /> Add Task\n                </Dropdown.Item>\n                <Dropdown.Item className=\"d-flex align-items-center\">\n                  <ViewGridAddIcon className=\"icon icon-xs text-gray-400 me-2\" /> Add Widget\n                </Dropdown.Item>\n                <Dropdown.Item className=\"d-flex align-items-center\">\n                  <CloudUploadIcon className=\"icon icon-xs text-gray-400 me-2\" /> Upload Files\n                </Dropdown.Item>\n                <Dropdown.Item className=\"d-flex align-items-center\">\n                  <ShieldCheckIcon className=\"icon icon-xs text-gray-400 me-2\" /> Preview Security\n                </Dropdown.Item>\n\n                <Dropdown.Divider as=\"div\" className=\"my-1\" />\n\n                <Dropdown.Item className=\"d-flex align-items-center\">\n                  <FireIcon className=\"icon icon-xs text-danger me-2\" /> Upgrade to Pro\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n          <ButtonGroup>\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={<Tooltip className=\"m-0\">Archive</Tooltip>}\n            >\n              <Button variant=\"gray-800\" disabled={disableMenu} onClick={archiveSelectedTasks}>\n                <ArchiveIcon className=\"icon icon-xs\" />\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={<Tooltip className=\"m-0\">Mark as done</Tooltip>}\n            >\n              <Button variant=\"gray-800\" disabled={disableMenu} onClick={markSelectedTasksAsDone}>\n                <CheckCircleIcon className=\"icon icon-xs\" />\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={<Tooltip className=\"m-0\">Delete</Tooltip>}\n            >\n              <Button variant=\"gray-800\" disabled={disableMenu} onClick={() => deleteTasks(selectedTasksIds)}>\n                <TrashIcon className=\"icon icon-xs\" />\n              </Button>\n            </OverlayTrigger>\n          </ButtonGroup>\n        </Col>\n\n        <Col xs={12} lg={6}>\n          <InputGroup className=\"d-flex justify-content-lg-end\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Search Tasks Here\"\n              className=\"w-100 fmxw-300\"\n              value={searchValue}\n              onChange={changeSearchValue}\n            />\n          </InputGroup>\n        </Col>\n      </div>\n\n      <div className=\"task-wrapper border bg-white border-light shadow-sm py-1 rounded\">\n        {tasks.filter(t => t.show).map(t =>\n          <TaskCardWidget\n            {...t}\n            key={`task-${t.id}`}\n            selectTask={selectTask}\n            toggleDoneStatus={toggleDoneStatus}\n            deleteTask={id => deleteTasks([id])}\n          />\n        )}\n\n        <Row className=\"d-flex align-items-center p-4\">\n          <Col xs={7} className=\"mt-1\">\n            Showing 1 - {tasks.length} of 289\n          </Col>\n          <Col xs={5}>\n            <ButtonGroup className=\"float-end\">\n              <Button variant=\"light\">\n                <ChevronLeftIcon className=\"icon icon-xs\" />\n              </Button>\n              <Button variant=\"primary\">\n                <ChevronRightIcon className=\"icon icon-xs\" />\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}