{"ast":null,"code":"import React from'react';import{CloudDownloadIcon,ChatIcon,ChevronDownIcon,ChevronUpIcon,ChevronLeftIcon,ChevronRightIcon}from\"@heroicons/react/solid\";import{Col,Row,Button,Spinner,Container,Dropdown,ButtonGroup}from'react-bootstrap';import Documentation from\"components/Documentation\";import{FacebookIcon,GithubIcon,PaypalIcon,PinterestIcon,TwitterIcon,TwitchIcon,YoutubeIcon}from\"components/BrandIcons\";export default(function(){return/*#__PURE__*/React.createElement(\"article\",null,/*#__PURE__*/React.createElement(Container,{className:\"px-0\"},/*#__PURE__*/React.createElement(Row,{className:\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\"},/*#__PURE__*/React.createElement(Col,{className:\"d-block mb-4 mb-md-0\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"h2\"},\"Buttons\"),/*#__PURE__*/React.createElement(\"p\",{className:\"mb-0\"},\"Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\"))),/*#__PURE__*/React.createElement(Documentation,{title:\"Example\",description:/*#__PURE__*/React.createElement(\"p\",null,\"The \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the \",/*#__PURE__*/React.createElement(\"code\",null,\"variant\"),\" attribute.\"),scope:{Button:Button},imports:\"import { Button } from 'react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"m-1\\\">Primary</Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"m-1\\\">Secondary</Button>\\n  <Button variant=\\\"tertiary\\\" className=\\\"m-1\\\">Tertiary</Button>\\n  <Button variant=\\\"info\\\" className=\\\"m-1\\\">Info</Button>\\n  <Button variant=\\\"success\\\" className=\\\"m-1\\\">Success</Button>\\n  <Button variant=\\\"warning\\\" className=\\\"m-1\\\">Warning</Button>\\n  <Button variant=\\\"danger\\\" className=\\\"m-1\\\">Danger</Button>\\n  <Button variant=\\\"gray-900\\\" className=\\\"m-1\\\">Dark</Button>\\n  <Button variant=\\\"gray-700\\\" className=\\\"m-1\\\">Gray</Button>\\n  <Button variant=\\\"gray-100\\\" className=\\\"m-1\\\">Light</Button>\\n  <Button variant=\\\"white\\\" className=\\\"m-1\\\">White</Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Button sizing\",description:/*#__PURE__*/React.createElement(\"p\",null,\"The \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component comes with three main sizing options: \",/*#__PURE__*/React.createElement(\"code\",null,\"sm\"),\", default, and \",/*#__PURE__*/React.createElement(\"code\",null,\"lg\"),\". In order to change the size of the button you need to set the size using the \",/*#__PURE__*/React.createElement(\"code\",null,\"size\"),\" attribute.\"),scope:{Button:Button},imports:\"import { Button } from 'react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"primary\\\" size=\\\"sm\\\" className=\\\"me-2\\\">\\n    Small\\n  </Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"me-2\\\">\\n    Default\\n  </Button>\\n  <Button variant=\\\"tertiary\\\" size=\\\"lg\\\" className=\\\"me-2\\\">\\n    Large\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Buttons with outline\",description:/*#__PURE__*/React.createElement(\"p\",null,\"Instead of a fully colored background, you can also choose to style the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component to only have an outline border by using the \",/*#__PURE__*/React.createElement(\"code\",null,\"outline-primary\"),\", \",/*#__PURE__*/React.createElement(\"code\",null,\"outline-secondary\"),\" modifier classes inside the \",/*#__PURE__*/React.createElement(\"code\",null,\"variant\"),\" attribute.\"),scope:{Button:Button},imports:\"import { Button } from 'react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"outline-primary\\\" className=\\\"m-1\\\">Primary</Button>\\n  <Button variant=\\\"outline-secondary\\\" className=\\\"m-1\\\">Secondary</Button>\\n  <Button variant=\\\"outline-tertiary\\\" className=\\\"m-1\\\">Tertiary</Button>\\n  <Button variant=\\\"outline-info\\\" className=\\\"m-1\\\">Info</Button>\\n  <Button variant=\\\"outline-success\\\" className=\\\"m-1\\\">Success</Button>\\n  <Button variant=\\\"outline-danger\\\" className=\\\"m-1\\\">Danger</Button>\\n  <Button variant=\\\"outline-gray-900\\\" className=\\\"m-1\\\">Dark</Button>\\n  <Button variant=\\\"outline-gray-700\\\" className=\\\"m-1\\\">Gray</Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Link buttons\",description:/*#__PURE__*/React.createElement(\"p\",null,\"If you want to use the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component, but without the appearance of a button, just use the \",/*#__PURE__*/React.createElement(\"code\",null,\"bsPrefix=\\\"text\\\"\"),\" attribute to create link styled buttons.\"),scope:{Button:Button},imports:\"import { Button } from 'react-bootstrap';\",example:\"<React.Fragment>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#primary\\\" variant=\\\"primary\\\" className=\\\"m-3\\\">Primary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#secondary\\\" variant=\\\"secondary\\\" className=\\\"m-3\\\">Secondary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#tertiary\\\" variant=\\\"tertiary\\\" className=\\\"m-3\\\">Tertiary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#info\\\" variant=\\\"info\\\" className=\\\"m-3\\\">Info</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#success\\\" variant=\\\"success\\\" className=\\\"m-3\\\">Success</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#danger\\\" variant=\\\"danger\\\" className=\\\"m-3\\\">Danger</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#dark\\\" variant=\\\"dark\\\" className=\\\"m-3\\\">Dark</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#gray\\\" variant=\\\"gray-700\\\" className=\\\"m-3\\\">Gray</Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Buttons with icon\",description:/*#__PURE__*/React.createElement(\"p\",null,\"You may want to use icons inside the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component, which can be done by simply adding a \",/*#__PURE__*/React.createElement(\"code\",null,\"<FontAwesomeIcon>\"),\" component inside the button element.\"),scope:{Button:Button,CloudDownloadIcon:CloudDownloadIcon,ChatIcon:ChatIcon},imports:\"import { Button } from 'react-bootstrap';\\nimport { CloudDownloadIcon, ChatIcon } from \\\"@heroicons/react/solid\\\";\",example:\"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"m-1\\\">\\n    Download <CloudDownloadIcon className=\\\"icon icon-xs ms-1\\\" />\\n  </Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"m-1\\\">\\n    <ChatIcon className=\\\"icon icon-xs me-1\\\" /> Contact Us\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Circle buttons\",description:/*#__PURE__*/React.createElement(\"p\",null,\"If you'd like to create a button with a fully circled appearance, all you need to do is add the two modifier classes of \",/*#__PURE__*/React.createElement(\"code\",null,\"btn-circle\"),\" and \",/*#__PURE__*/React.createElement(\"code\",null,\"btn-icon-only\"),\" if you wish to use only icons inside the button.\"),scope:{Button:Button,FacebookIcon:FacebookIcon,TwitterIcon:TwitterIcon},imports:\"import { Button } from 'react-bootstrap';\\nimport { FacebookIcon, TwitterIcon } from \\\"components/BrandIcons\\\";\",example:\"<React.Fragment>\\n  <Button className=\\\"btn-icon-only btn-circle btn-facebook m-1\\\">\\n    <FacebookIcon />\\n  </Button>\\n  <Button className=\\\"btn-icon-only btn-circle btn-twitter m-1\\\">\\n    <TwitterIcon />\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Social media buttons\",description:/*#__PURE__*/React.createElement(\"p\",null,\"We've also built social media specific button styles, so all you need to do to add the specific colors is to update the \",/*#__PURE__*/React.createElement(\"code\",null,\"variant\"),\" attribute by adding values, such as \",/*#__PURE__*/React.createElement(\"code\",null,\"facebook\"),\", \",/*#__PURE__*/React.createElement(\"code\",null,\"twitter\"),\", or \",/*#__PURE__*/React.createElement(\"code\",null,\"pinterest.\"),\". You can also add a \",/*#__PURE__*/React.createElement(\"code\",null,\"<FontAwesomeIcon>\"),\" component to use the logo of the social media platforms as an icon.\"),scope:{Button:Button,FacebookIcon:FacebookIcon,PinterestIcon:PinterestIcon,YoutubeIcon:YoutubeIcon,GithubIcon:GithubIcon,TwitchIcon:TwitchIcon,PaypalIcon:PaypalIcon,TwitterIcon:TwitterIcon},imports:\"import { Button } from 'react-bootstrap';\\nimport { BehanceIcon, FacebookIcon, GithubIcon, PaypalIcon, PinterestIcon, TwitchIcon, YoutubeIcon } from \\\"components/BrandIcons\\\";\",example:\"<React.Fragment>\\n  <Button variant=\\\"facebook\\\" className=\\\"me-3 mb-3\\\">\\n    <FacebookIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Login with Facebook\\n  </Button>\\n  <Button variant=\\\"pinterest\\\" className=\\\"me-3 mb-3\\\">\\n    <PinterestIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Share on Pinterest\\n  </Button>\\n  <Button variant=\\\"twitter\\\" className=\\\"text-white me-3 mb-3\\\">\\n    <TwitterIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Share on Twitter\\n  </Button>\\n  <Button variant=\\\"youtube\\\" className=\\\"me-3 mb-3\\\">\\n    <YoutubeIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Watch on YouTube\\n  </Button>\\n  <Button variant=\\\"github\\\" className=\\\"me-3 mb-3\\\">\\n    <GithubIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Login with GitHub\\n  </Button>\\n  <Button variant=\\\"twitch\\\" className=\\\"me-3 mb-3\\\">\\n    <TwitchIcon size=\\\"xs\\\" className=\\\"me-2\\\" />\\n    Subscribe Now\\n  </Button>\\n  <Button variant=\\\"paypal\\\" className=\\\"me-3 mb-3\\\">\\n    <PaypalIcon size=\\\"xs\\\" color=\\\"dark\\\" className=\\\"me-2\\\" />\\n    Donate with PayPal\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Loading buttons\",description:/*#__PURE__*/React.createElement(\"p\",null,\"By using React you can easily set the state of buttons to be disabled and in a loading state, before the data comes through from the back-end. You can add the \",/*#__PURE__*/React.createElement(\"code\",null,\"disabled\"),\" modifier attribute and use the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Spinner>\"),\" component inside the button.\"),scope:{Button:Button,Spinner:Spinner},imports:\"import { Button, Spinner } from 'react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"d-flex align-items-center mb-1\\\">\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n  </Button>\\n  <Button variant=\\\"primary\\\" className=\\\"d-flex align-items-center mb-1\\\">\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n    <span className=\\\"ms-2\\\">Loading...</span>\\n  </Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"d-flex align-items-center mb-1\\\">\\n    <span className=\\\"me-2\\\">Loading...</span>\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Block level Buttons\",description:/*#__PURE__*/React.createElement(\"p\",null,\"Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the \",/*#__PURE__*/React.createElement(\"code\",null,\"w-100\"),\" class to the component.\"),scope:{Button:Button},imports:\"import { Button } from 'react-bootstrap';\",example:\"<Button variant=\\\"secondary\\\" color=\\\"dark\\\" className=\\\"w-100\\\">Block</Button>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Disabled state\",description:/*#__PURE__*/React.createElement(\"p\",null,\"You may want to disable the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component for various reasons, so you need to add the \",/*#__PURE__*/React.createElement(\"code\",null,\"disabled\"),\" attribute in order to achieve that.\"),scope:{Button:Button},imports:\"import { Button } from 'react-bootstrap';\",example:\"<React.Fragment>\\n  <Button disabled variant=\\\"primary\\\" className=\\\"mb-2 me-2\\\">\\n    Primary button\\n  </Button>\\n  <Button disabled variant=\\\"secondary\\\" className=\\\"mb-2 me-2\\\">\\n    Button\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Button animations\",description:/*#__PURE__*/React.createElement(\"p\",null,\"We've added some handy animations for when any element in the UI is hovered upon, so if you want to add an animation to the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component, all you need to do is use the \",/*#__PURE__*/React.createElement(\"code\",null,\"animate-up-*\"),\", \",/*#__PURE__*/React.createElement(\"code\",null,\"animate-right-*\"),\", \",/*#__PURE__*/React.createElement(\"code\",null,\"animate-down-*\"),\", or \",/*#__PURE__*/React.createElement(\"code\",null,\"animate-left-*\"),\", where the * can be a number from 1 to 5 changing in the animation intensity.\"),scope:{Button:Button},imports:\"import { Button } from 'react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"animate-up-2 mb-2 me-2\\\">Animate up</Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"animate-right-3 mb-2 me-2\\\">Animate right</Button>\\n  <Button variant=\\\"tertiary\\\" className=\\\"animate-left-3 mb-2 me-2\\\">Animate left</Button>\\n  <Button variant=\\\"success\\\" className=\\\"animate-down-2 mb-2 me-2\\\">Animate down</Button>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Dropdown buttons\",description:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",null,\"Use the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Dropdown>\"),\" component coupled with the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component in order to create dropdown items when clicking on a button. The \",/*#__PURE__*/React.createElement(\"code\",null,\" <Dropdown.Toggle>\"),\" is the component that will trigger the dropdown menu, while the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Dropdown.Menu>\"),\" is the actual menu where you can add the dropdown items.\"),/*#__PURE__*/React.createElement(\"p\",null,\"The \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component is used either before or after the toggle component, but all of this is wrapped around with the main \",/*#__PURE__*/React.createElement(\"code\",null,\"<Dropdown>\"),\" component.\")),scope:{Button:Button,Dropdown:Dropdown,ButtonGroup:ButtonGroup,ChevronDownIcon:ChevronDownIcon},imports:\"import { Button, Dropdown, ButtonGroup } from 'react-bootstrap';\\nimport { ChevronDownIcon } from \\\"@heroicons/react/solid\\\";\",example:\"<React.Fragment>\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"primary\\\">Primary</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown as={ButtonGroup} className=\\\"mb-2 me-2\\\">\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Dropdown sizing\",description:/*#__PURE__*/React.createElement(\"p\",null,\"You may want to use one of the three main sizing options for the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Dropdown>\"),\" component, so in order to do that you only need to use the \",/*#__PURE__*/React.createElement(\"code\",null,\"size=\\\"md\\\"\"),\" or \",/*#__PURE__*/React.createElement(\"code\",null,\"size=\\\"lg\\\"\"),\" attributes for the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Button>\"),\" component inside the dropdown component.\"),scope:{Button:Button,Dropdown:Dropdown,ButtonGroup:ButtonGroup,ChevronDownIcon:ChevronDownIcon},imports:\"import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\\nimport { ChevronDownIcon } from \\\"@heroicons/react/solid\\\";\",example:\"<React.Fragment>\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"sm\\\" variant=\\\"primary\\\">Small</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"secondary\\\">Default</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"secondary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Large</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Dropdown direction\",description:/*#__PURE__*/React.createElement(\"p\",null,\"If you want to change the direction of the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Dropdown>\"),\" component, you can do that by using the \",/*#__PURE__*/React.createElement(\"code\",null,\"direction=\\\"*\\\"\"),\" attribute where you can use \",/*#__PURE__*/React.createElement(\"code\",null,\"up\"),\", \",/*#__PURE__*/React.createElement(\"code\",null,\"right\"),\", \",/*#__PURE__*/React.createElement(\"code\",null,\"down\"),\", or \",/*#__PURE__*/React.createElement(\"code\",null,\"left\"),\" as attribute values.\"),scope:{Button:Button,Dropdown:Dropdown,ButtonGroup:ButtonGroup,ChevronDownIcon:ChevronDownIcon,ChevronUpIcon:ChevronUpIcon,ChevronLeftIcon:ChevronLeftIcon,ChevronRightIcon:ChevronRightIcon},imports:\"import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\\nimport { ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon } from \\\"@heroicons/react/solid\\\";\",example:\"<React.Fragment>\\n  <Dropdown drop=\\\"up\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"sm\\\" variant=\\\"primary\\\">Up</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <ChevronUpIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"end\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"secondary\\\">Right</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"secondary\\\">\\n      <ChevronRightIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"down\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Down</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <ChevronDownIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop=\\\"start\\\" as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Left</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <ChevronLeftIcon className=\\\"icon icon-xs\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\"})));});","map":{"version":3,"sources":["/Users/oisinlyons/Downloads/volt-pro-react-v1.1.0/src/pages/components/Buttons.js"],"names":["React","CloudDownloadIcon","ChatIcon","ChevronDownIcon","ChevronUpIcon","ChevronLeftIcon","ChevronRightIcon","Col","Row","Button","Spinner","Container","Dropdown","ButtonGroup","Documentation","FacebookIcon","GithubIcon","PaypalIcon","PinterestIcon","TwitterIcon","TwitchIcon","YoutubeIcon"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { CloudDownloadIcon, ChatIcon, ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";\nimport { Col, Row, Button, Spinner, Container, Dropdown, ButtonGroup } from 'react-bootstrap';\n\nimport Documentation from \"components/Documentation\";\nimport { FacebookIcon, GithubIcon, PaypalIcon, PinterestIcon, TwitterIcon, TwitchIcon, YoutubeIcon } from \"components/BrandIcons\";\n\n\nexport default () => {\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Buttons</h1>\n            <p className=\"mb-0\">\n              Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\n            </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <p>The <code>&#x3C;Button&#x3E;</code> component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the <code>variant</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"info\" className=\"m-1\">Info</Button>\n  <Button variant=\"success\" className=\"m-1\">Success</Button>\n  <Button variant=\"warning\" className=\"m-1\">Warning</Button>\n  <Button variant=\"danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"gray-900\" className=\"m-1\">Dark</Button>\n  <Button variant=\"gray-700\" className=\"m-1\">Gray</Button>\n  <Button variant=\"gray-100\" className=\"m-1\">Light</Button>\n  <Button variant=\"white\" className=\"m-1\">White</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Button sizing\"\n          description={\n            <p>The <code>&#x3C;Button&#x3E;</code> component comes with three main sizing options: <code>sm</code>, default, and <code>lg</code>. In order to change the size of the button you need to set the size using the <code>size</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" size=\"sm\" className=\"me-2\">\n    Small\n  </Button>\n  <Button variant=\"secondary\" className=\"me-2\">\n    Default\n  </Button>\n  <Button variant=\"tertiary\" size=\"lg\" className=\"me-2\">\n    Large\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Buttons with outline\"\n          description={\n            <p>Instead of a fully colored background, you can also choose to style the <code>&#x3C;Button&#x3E;</code> component to only have an outline border by using the <code>outline-primary</code>, <code>outline-secondary</code> modifier classes inside the <code>variant</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"outline-primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"outline-secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"outline-tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"outline-info\" className=\"m-1\">Info</Button>\n  <Button variant=\"outline-success\" className=\"m-1\">Success</Button>\n  <Button variant=\"outline-danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"outline-gray-900\" className=\"m-1\">Dark</Button>\n  <Button variant=\"outline-gray-700\" className=\"m-1\">Gray</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Link buttons\"\n          description={\n            <p>If you want to use the <code>&#x3C;Button&#x3E;</code> component, but without the appearance of a button, just use the <code>bsPrefix=\"text\"</code> attribute to create link styled buttons.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button bsPrefix=\"text\" href=\"#primary\" variant=\"primary\" className=\"m-3\">Primary</Button>\n  <Button bsPrefix=\"text\" href=\"#secondary\" variant=\"secondary\" className=\"m-3\">Secondary</Button>\n  <Button bsPrefix=\"text\" href=\"#tertiary\" variant=\"tertiary\" className=\"m-3\">Tertiary</Button>\n  <Button bsPrefix=\"text\" href=\"#info\" variant=\"info\" className=\"m-3\">Info</Button>\n  <Button bsPrefix=\"text\" href=\"#success\" variant=\"success\" className=\"m-3\">Success</Button>\n  <Button bsPrefix=\"text\" href=\"#danger\" variant=\"danger\" className=\"m-3\">Danger</Button>\n  <Button bsPrefix=\"text\" href=\"#dark\" variant=\"dark\" className=\"m-3\">Dark</Button>\n  <Button bsPrefix=\"text\" href=\"#gray\" variant=\"gray-700\" className=\"m-3\">Gray</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Buttons with icon\"\n          description={\n            <p>You may want to use icons inside the <code>&#x3C;Button&#x3E;</code> component, which can be done by simply adding a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component inside the button element.</p>\n          }\n          scope={{ Button, CloudDownloadIcon, ChatIcon }}\n          imports={`import { Button } from 'react-bootstrap';\nimport { CloudDownloadIcon, ChatIcon } from \"@heroicons/react/solid\";`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"m-1\">\n    Download <CloudDownloadIcon className=\"icon icon-xs ms-1\" />\n  </Button>\n  <Button variant=\"secondary\" className=\"m-1\">\n    <ChatIcon className=\"icon icon-xs me-1\" /> Contact Us\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Circle buttons\"\n          description={\n            <p>If you'd like to create a button with a fully circled appearance, all you need to do is add the two modifier classes of <code>btn-circle</code> and <code>btn-icon-only</code> if you wish to use only icons inside the button.</p>\n          }\n          scope={{ Button, FacebookIcon, TwitterIcon }}\n          imports={`import { Button } from 'react-bootstrap';\nimport { FacebookIcon, TwitterIcon } from \"components/BrandIcons\";`}\n          example={`<React.Fragment>\n  <Button className=\"btn-icon-only btn-circle btn-facebook m-1\">\n    <FacebookIcon />\n  </Button>\n  <Button className=\"btn-icon-only btn-circle btn-twitter m-1\">\n    <TwitterIcon />\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Social media buttons\"\n          description={\n            <p>We've also built social media specific button styles, so all you need to do to add the specific colors is to update the <code>variant</code> attribute by adding values, such as <code>facebook</code>, <code>twitter</code>, or <code>pinterest.</code>. You can also add a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component to use the logo of the social media platforms as an icon.</p>\n          }\n          scope={{ Button, FacebookIcon, PinterestIcon, YoutubeIcon, GithubIcon, TwitchIcon, PaypalIcon, TwitterIcon }}\n          imports={`import { Button } from 'react-bootstrap';\nimport { BehanceIcon, FacebookIcon, GithubIcon, PaypalIcon, PinterestIcon, TwitchIcon, YoutubeIcon } from \"components/BrandIcons\";`}\n          example={`<React.Fragment>\n  <Button variant=\"facebook\" className=\"me-3 mb-3\">\n    <FacebookIcon size=\"xs\" className=\"me-2\" />\n    Login with Facebook\n  </Button>\n  <Button variant=\"pinterest\" className=\"me-3 mb-3\">\n    <PinterestIcon size=\"xs\" className=\"me-2\" />\n    Share on Pinterest\n  </Button>\n  <Button variant=\"twitter\" className=\"text-white me-3 mb-3\">\n    <TwitterIcon size=\"xs\" className=\"me-2\" />\n    Share on Twitter\n  </Button>\n  <Button variant=\"youtube\" className=\"me-3 mb-3\">\n    <YoutubeIcon size=\"xs\" className=\"me-2\" />\n    Watch on YouTube\n  </Button>\n  <Button variant=\"github\" className=\"me-3 mb-3\">\n    <GithubIcon size=\"xs\" className=\"me-2\" />\n    Login with GitHub\n  </Button>\n  <Button variant=\"twitch\" className=\"me-3 mb-3\">\n    <TwitchIcon size=\"xs\" className=\"me-2\" />\n    Subscribe Now\n  </Button>\n  <Button variant=\"paypal\" className=\"me-3 mb-3\">\n    <PaypalIcon size=\"xs\" color=\"dark\" className=\"me-2\" />\n    Donate with PayPal\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Loading buttons\"\n          description={\n            <p>By using React you can easily set the state of buttons to be disabled and in a loading state, before the data comes through from the back-end. You can add the <code>disabled</code> modifier attribute and use the <code>&#x3C;Spinner&#x3E;</code> component inside the button.</p>\n          }\n          scope={{ Button, Spinner }}\n          imports={`import { Button, Spinner } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"d-flex align-items-center mb-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n  <Button variant=\"primary\" className=\"d-flex align-items-center mb-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n    <span className=\"ms-2\">Loading...</span>\n  </Button>\n  <Button variant=\"secondary\" className=\"d-flex align-items-center mb-1\">\n    <span className=\"me-2\">Loading...</span>\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Block level Buttons\"\n          description={\n            <p>Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the <code>w-100</code> class to the component.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<Button variant=\"secondary\" color=\"dark\" className=\"w-100\">Block</Button>`}\n        />\n\n        <Documentation\n          title=\"Disabled state\"\n          description={\n            <p>You may want to disable the <code>&#x3C;Button&#x3E;</code> component for various reasons, so you need to add the <code>disabled</code> attribute in order to achieve that.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button disabled variant=\"primary\" className=\"mb-2 me-2\">\n    Primary button\n  </Button>\n  <Button disabled variant=\"secondary\" className=\"mb-2 me-2\">\n    Button\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Button animations\"\n          description={\n            <p>We've added some handy animations for when any element in the UI is hovered upon, so if you want to add an animation to the <code>&#x3C;Button&#x3E;</code> component, all you need to do is use the <code>animate-up-*</code>, <code>animate-right-*</code>, <code>animate-down-*</code>, or <code>animate-left-*</code>, where the * can be a number from 1 to 5 changing in the animation intensity.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from 'react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"animate-up-2 mb-2 me-2\">Animate up</Button>\n  <Button variant=\"secondary\" className=\"animate-right-3 mb-2 me-2\">Animate right</Button>\n  <Button variant=\"tertiary\" className=\"animate-left-3 mb-2 me-2\">Animate left</Button>\n  <Button variant=\"success\" className=\"animate-down-2 mb-2 me-2\">Animate down</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown buttons\"\n          description={\n            <>\n              <p>Use the <code>&#x3C;Dropdown&#x3E;</code> component coupled with the <code>&#x3C;Button&#x3E;</code> component in order to create dropdown items when clicking on a button. The <code> &#x3C;Dropdown.Toggle&#x3E;</code> is the component that will trigger the dropdown menu, while the <code>&#x3C;Dropdown.Menu&#x3E;</code> is the actual menu where you can add the dropdown items.</p>\n              <p>The <code>&#x3C;Button&#x3E;</code> component is used either before or after the toggle component, but all of this is wrapped around with the main <code>&#x3C;Dropdown&#x3E;</code> component.</p>\n            </>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, ChevronDownIcon }}\n          imports={`import { Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { ChevronDownIcon } from \"@heroicons/react/solid\";`}\n          example={`<React.Fragment>\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"primary\">Primary</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown as={ButtonGroup} className=\"mb-2 me-2\">\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown sizing\"\n          description={\n            <p>You may want to use one of the three main sizing options for the <code>&#x3C;Dropdown&#x3E;</code> component, so in order to do that you only need to use the <code>size=\"md\"</code> or <code>size=\"lg\"</code> attributes for the <code>&#x3C;Button&#x3E;</code> component inside the dropdown component.</p>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, ChevronDownIcon }}\n          imports={`import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\nimport { ChevronDownIcon } from \"@heroicons/react/solid\";`}\n          example={`<React.Fragment>\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Small</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Default</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Large</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown direction\"\n          description={\n            <p>If you want to change the direction of the <code>&#x3C;Dropdown&#x3E;</code> component, you can do that by using the <code>direction=\"*\"</code> attribute where you can use <code>up</code>, <code>right</code>, <code>down</code>, or <code>left</code> as attribute values.</p>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon }}\n          imports={`import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\nimport { ChevronDownIcon, ChevronUpIcon, ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";`}\n          example={`<React.Fragment>\n  <Dropdown drop=\"up\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Up</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <ChevronUpIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"end\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Right</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <ChevronRightIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"down\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Down</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <ChevronDownIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop=\"start\" as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Left</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <ChevronLeftIcon className=\"icon icon-xs\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n      </Container>\n    </article>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}